<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-09-02T02:24:25-04:00</updated><id>http://localhost:4000/</id><title type="html">Rico Sharp</title><subtitle></subtitle><author><name>Rico Sharp</name><email>rico.sharp@gmail.com</email></author><entry><title type="html">Up and running with Apache Guacamole on CentOS 7</title><link href="http://localhost:4000/posts/2019/Up-and-running-with-Apache-Guacamole-on-Centos7" rel="alternate" type="text/html" title="Up and running with Apache Guacamole on CentOS 7" /><published>2019-09-02T00:00:00-04:00</published><updated>2019-09-02T00:00:00-04:00</updated><id>http://localhost:4000/posts/2019/Up-and-running-with-Apache-Guacamole-on-Centos7</id><content type="html" xml:base="http://localhost:4000/posts/2019/Up-and-running-with-Apache-Guacamole-on-Centos7">&lt;p&gt;Apache Guacamole is an open source, clientless remote access gateway. It can be used to establish remote sessions over various protocols through a web browser. Below I will set up Apache Guacamole with authentication against Active Directory (AD) through Lightweight Directory Access Protocol (LDAP).&lt;/p&gt;

&lt;p&gt;After this I will configure a Windows 10 Pro machine in two ways; Remote Desktop Protocol (RDP) and RemoteApp. The difference between the two is RDP offers a full desktop whereas RemoteApp will present a single application.&lt;/p&gt;

&lt;p&gt;In this article I will continue to use the AD environment from my &lt;a href=&quot;https://blog.ricosharp.com/posts/2019/Samba-4-Active-Directory-Domain-Controller-on-Ubuntu-18-04-Server&quot;&gt;Samba 4 Active Directory Domain Controller on Ubuntu 18.04 Server
&lt;/a&gt; post.&lt;/p&gt;

&lt;p&gt;The Apache Guacamole machine I will be using is a minimal installation of Centos 7 with an IP address of 192.168.122.75 and hostname of guacamole.&lt;/p&gt;

&lt;h2 id=&quot;add-dns-entry-for-guacamole-machine&quot;&gt;Add DNS entry for Guacamole machine&lt;/h2&gt;
&lt;p&gt;On DC1, the domain controller, add a DNS record for the Apache Guacamole machine.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;samba-tool dns add 192.168.122.70 ad.ricosharp.com guacamole A 192.168.122.75&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Make sure your Unix user has an account in AD so you can authenticate. The account I am using has been added as a Domain Administrator&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you skip this step, you can just access the Guacamole machine through its IP address.&lt;/p&gt;

&lt;h2 id=&quot;trusted-certificates-for-ldap&quot;&gt;Trusted Certificates for LDAP&lt;/h2&gt;

&lt;p&gt;You will need the public certificate of your domain controller (DC1) since we will be using LDAPS. Samba creates a self signed certificate when provisioning a domain controller in /var/lib/samba/private/tls called ca.pem. This will need to be copied to the CentOS 7 server. Here I also add it as a trusted certificate on the guacamole machine and test that it works.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DC1&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;scp /var/lib/samba/private/tls/ca.pem root@guacamole.ad.ricosharp.com:/etc/pki/ca-trust/source/anchors/ca.pem&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;GUACAMOLE&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# update-ca-trust extract
~]# openssl s_client &lt;span class=&quot;nt&quot;&gt;-connect&lt;/span&gt; dc1.ad.ricosharp.com:636&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The result will say ok. If you get a message saying unable to verify then the certificate has not been added properly.&lt;/p&gt;

&lt;p&gt;Next you will need to create an LDAP bind user in AD. I just create a standard user called ldapbind through Active Directory Users and Computers.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/ad-ldap-bind-user.png&quot; alt=&quot;AD LDAP Bind User&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GUACAMOLE&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now, test that you can actually connect to AD with LDAPS. You will be prompted for the ldapbind user’s password and&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# yum install openldap-clients &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;
~]# ldapsearch &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; ldaps://dc1.ad.ricosharp.com:636 &lt;span class=&quot;nt&quot;&gt;-D&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;CN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ldapbind,CN&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Users,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ad,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ricosharp,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;com &lt;span class=&quot;nt&quot;&gt;-W&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;DC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ad,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ricosharp,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;com&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If sucessful, the query will return some AD information. You should The machine is now ready to have Apache Guacamole installed.&lt;/p&gt;

&lt;h2 id=&quot;guacamole-installation&quot;&gt;Guacamole Installation&lt;/h2&gt;
&lt;p&gt;The easiest way to get up and running is to use a script, like this one &lt;a href=&quot;https://github.com/Zer0CoolX/guacamole-install-rhel/blob/master/guac-install.sh&quot;&gt;here&lt;/a&gt; by &lt;a href=&quot;https://github.com/Zer0CoolX&quot;&gt;Zer0CoolX&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Download the script, give it execute permissions, and run it.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# yum install wget &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;
~]# wget https://raw.githubusercontent.com/Zer0CoolX/guacamole-install-rhel/master/guac-install.sh
~]# chmod +x guac-install.sh
~]# ./guac-install.sh&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Follow the prompts to install. Below are the main settings to specify:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Self-signed certificate&lt;/li&gt;
  &lt;li&gt;Hostname - guacamole&lt;/li&gt;
  &lt;li&gt;LDAP(S)&lt;/li&gt;
  &lt;li&gt;yes to LDAPS&lt;/li&gt;
  &lt;li&gt;Certificate filename: ca.pem&lt;/li&gt;
  &lt;li&gt;Certificate path: /etc/pki/ca-trust/source/anchors/&lt;/li&gt;
  &lt;li&gt;LDAP Server Hostname: ad.ricosharp.com&lt;/li&gt;
  &lt;li&gt;LDAP User Base DN: DC=ad,DC=ricosharp,DC=com&lt;/li&gt;
  &lt;li&gt;LDAP Search Bind DN: CN=ldapbind,CN=Users,DC=ad,DC=ricosharp,DC=com&lt;/li&gt;
  &lt;li&gt;No 2FA&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Select option 8 to begin installation. The script recommends a reboot once installation completes.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# reboot&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;After rebooting, you can access the web front end through either the hostname or IP address in a web browser.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/guacamole-ui.png&quot; alt=&quot;Guacamole UI&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The default administrator username/password is guacadmin/guacadmin.&lt;/p&gt;

&lt;h2 id=&quot;linking-ad-accounts&quot;&gt;Linking AD Accounts&lt;/h2&gt;

&lt;p&gt;The default guacadmin user can only access users stored in the local database. You need to add an AD user in order view and grant AD accounts access to remote sessions.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Log in to web interface using the default username/password&lt;/li&gt;
  &lt;li&gt;Click guacadmin at the top right hand corner of the page and select Settings&lt;/li&gt;
  &lt;li&gt;Click the Users tab&lt;/li&gt;
  &lt;li&gt;Select New User&lt;/li&gt;
  &lt;li&gt;Enter an AD username/password. This can be a standard user account in AD&lt;/li&gt;
  &lt;li&gt;Check all the permissions options to make this user an administrator&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Log out and log back in under the AD account. You will now be able to see AD accounts under Settings &amp;gt; Users.&lt;/p&gt;

&lt;h2 id=&quot;windows-10-remote-desktop-protocol&quot;&gt;Windows 10 Remote Desktop Protocol&lt;/h2&gt;

&lt;p&gt;The Windows 10 Pro machine I am using is connected to AD with an IP address of 192.168.122.90 obtained through DHCP.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Windows 10 Machine&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;First, configure the Window 10 computer to allow RDP.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Open File Explorer&lt;/li&gt;
  &lt;li&gt;Right click This PC &amp;gt; Properties&lt;/li&gt;
  &lt;li&gt;Click Remote Settings&lt;/li&gt;
  &lt;li&gt;Click Allow remote connections to this computer and click Select Users&lt;/li&gt;
  &lt;li&gt;Add Domain Users to this list
&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/rdp-setup.png&quot; alt=&quot;RDP Setup&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Guacamole UI&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Next we need to add the machine to guacamole. Log into the guacamole UI and the administrator account that has access to AD users.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Click the username at the top right corner of the page &amp;gt; Settings&lt;/li&gt;
  &lt;li&gt;Click the Connections tab&lt;/li&gt;
  &lt;li&gt;Click New Connection&lt;/li&gt;
  &lt;li&gt;Give the connection a name and select RDP as the protocol&lt;/li&gt;
  &lt;li&gt;In the Network section under Parameters, enter either the hostname or IP and RDP port (default 3389)&lt;/li&gt;
  &lt;li&gt;Under Authentication use ${GUAC_USERNAME} as the username and ${GUAC_PASSWORD} as the password.&lt;/li&gt;
  &lt;li&gt;Enter the domain name and security mode&lt;/li&gt;
  &lt;li&gt;Select Ignore server certificate&lt;/li&gt;
  &lt;li&gt;Scroll to the bottom of the page and click Save&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/rdp-parameters.png&quot; alt=&quot;RDP Parameters&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A couple of points to make about the configuration above. Step 6 takes the credentials of the current logged  in user (${GUAC_USERNAME} and ${GUAC_PASSWORD})and passes it through to the Windows 10 RDP session for log in. So if johndoe logs into the guacamole UI and can see the Windows 10 machine advertised, it will log into that RDP session with his johndoe AD credentials.&lt;/p&gt;

&lt;p&gt;At step 8 we selected to ignore server certificates, as I do not have certificates set up. When connecting to an RDP session using the Windows RDP client, you will be prompted with a message saying the certificate is not trusted. Apache Guacamole does not do this and will fail to connect instead. Checking Ignore server certificate bypasses this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advertise RDP Connection&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now you need to actually advertise this connection to the users who should have access. To keep this simple, I’m going to advertise to a single user. Using the AD Administrator account within the guacamole UI, do the following.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Click the username at the top right corner of the page &amp;gt; Settings&lt;/li&gt;
  &lt;li&gt;Click the Users tab&lt;/li&gt;
  &lt;li&gt;Select the User who you want to advertise the RDP session to&lt;/li&gt;
  &lt;li&gt;Under Connections, click All Connections and check the box of the RDP session that was created&lt;/li&gt;
  &lt;li&gt;Click Save&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can now log out and log back in as this user and an RDP session will start automatically.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note that on a standard Windows computer, RDP is only limited to one logged in user at a time.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/guac-rdp-session.png&quot; alt=&quot;Guacamole RDP Session&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;remoteapps&quot;&gt;RemoteApps&lt;/h2&gt;
&lt;p&gt;RemoteApps is a great way of running a single application through an RDP session. The application is the only window that will show. There will be no start menu or desktop, just the application.&lt;/p&gt;

&lt;p&gt;In order to use RemoteApps under Windows 10 Pro, you need to make a slight change in the registry. On the machine that the RemoteApp will be running:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Open the registry through Start &amp;gt; Run &amp;gt; regedit&lt;/li&gt;
  &lt;li&gt;Navigate to HKEY_LOCAL_MACHINE\SOFTWARE\Microsot\Windows NT\CurrentVersion\Terminal Server\TSAppAllowList&lt;/li&gt;
  &lt;li&gt;Select fDisabledAllowList and change the value from 0 to 1&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/remoteapp-registry.png&quot; alt=&quot;RemoteApp Registry&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now advertise the RemoteApp as a new connection in guacamole. Here I will be advertising notepad using the same Windows 10 machine above:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Log in as the AD Administrator account within the guacamole UI&lt;/li&gt;
  &lt;li&gt;Click the username at the top right corner of the page &amp;gt; Settings&lt;/li&gt;
  &lt;li&gt;Select the Connection tab and choose New Connection&lt;/li&gt;
  &lt;li&gt;Give the connection a name and make sure you select RDP as the protocol&lt;/li&gt;
  &lt;li&gt;In the Network section under Parameters, enter either the hostname or IP and RDP port (default 3389)&lt;/li&gt;
  &lt;li&gt;Under Authentication use ${GUAC_USERNAME} as the username and ${GUAC_PASSWORD} as the password.&lt;/li&gt;
  &lt;li&gt;Enter the domain name and security mode&lt;/li&gt;
  &lt;li&gt;Select Ignore server certificate&lt;/li&gt;
  &lt;li&gt;In the RemoteApp section enter the path of notepad (C:\Windows\system32\notepad.exe) in the Program textbox&lt;/li&gt;
  &lt;li&gt;Scroll to the bottom of the page and click Save&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/rdp-remoteapp.png&quot; alt=&quot;RDP RemoteApp&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advertise RemoteApp&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As with the RDP session above, you need to advertise the RemoteApp RDP session&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Log in as the AD Administrator account within the guacamole UI&lt;/li&gt;
  &lt;li&gt;Click the username at the top right corner of the page &amp;gt; Settings&lt;/li&gt;
  &lt;li&gt;Click the Users tab&lt;/li&gt;
  &lt;li&gt;Select the User who you want to advertise the RemoteApp RDP session to&lt;/li&gt;
  &lt;li&gt;Under Connections, click All Connections and check the box of the RemoteApp RDP session just created&lt;/li&gt;
  &lt;li&gt;Click Save&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now log in under the user the RemoteApp was advertised to and notepad will start automatically.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/remoteapp-notepad.png&quot; alt=&quot;RemoteApp Notepad&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/Zer0CoolX/guacamole-install-rhel&quot;&gt;Apache Guacamole install script for RHEL 7/CentOS 7&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.sbsfaq.com/the-following-remoteapp-program-is-not-in-the-list-of-authorized-programs-on-windows-essential-server/&quot;&gt;The following RemoteApp program is not in the list of authorized programs on Windows Essential Server&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;Guacamole Apache LDAP Assignment&quot;&gt;https://serverfault.com/questions/965941/guacamole-apache-ldap-assignment&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Rico Sharp</name><email>rico.sharp@gmail.com</email></author><summary type="html">How to setup a clientless remote access gateway using CentOS 7 and Apache Guacamole with AD authentication, Windows RDP, and Remote Apps</summary></entry><entry><title type="html">How to configure a static IP address with netplan on Ubuntu 18.04 Server</title><link href="http://localhost:4000/posts/2019/How-to-configure-a-static-ip-address-with-netplan-on-Ubuntu-18-04-Server" rel="alternate" type="text/html" title="How to configure a static IP address with netplan on Ubuntu 18.04 Server" /><published>2019-08-25T00:00:00-04:00</published><updated>2019-08-25T00:00:00-04:00</updated><id>http://localhost:4000/posts/2019/How-to-configure-a-static-ip-address-with-netplan-on-Ubuntu-18-04-Server</id><content type="html" xml:base="http://localhost:4000/posts/2019/How-to-configure-a-static-ip-address-with-netplan-on-Ubuntu-18-04-Server">&lt;p&gt;I’ve only just begun using Ubuntu 18.04 server and one of the very first things I noticed was that network configuration is now done using netplan. I’m so used to doing the following:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/network/interfaces
auto ens3
iface ens3 inet static
    address 192.168.122.100
    netmask 255.255.255.0
    gateway 192.168.122.1
    dns-nameservers 8.8.8.8
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl restart networking&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To my surprise a message in /etc/network/interfaces says that ifupdown has been replaced by netplan. It turns out that although it’s a new way of configuring network settings, it isn’t all that hard.&lt;/p&gt;

&lt;p&gt;First, issue these commands:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;rm /etc/netplan/50-cloud-init.yaml
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg
&lt;span class=&quot;c&quot;&gt;#Add this line:&lt;/span&gt;
network: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;config: disabled&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;All the above commands do are disable cloud-init’s network configuration capabilities. If you reboot with the above configuration, you will have no network. To set a static IP address, create a new YAML file with the following:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/netplan/ens3.yaml
&lt;span class=&quot;c&quot;&gt;# Indents must be spaces when using YAML, not tabs.&lt;/span&gt;
network:
    version: 2
    ethernets:
        ens3:
            dhcp4: no
            addresses: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;192.168.122.100/24]
            gateway4: 192.168.122.1
            nameservers:
                addresses: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;8.8.8.8]&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now check the settings are ok in this file:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;netplan try&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If everything is ok you have the option to immediately apply the settings by pressing Enter.&lt;/p&gt;

&lt;p&gt;If you want to use a dynamic IP address instead, all you need to change in the above configuration is dhcp4: yes, then remove everything below it:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/netplan/ens3.yaml
&lt;span class=&quot;c&quot;&gt;# Indents must be spaces when using YAML, not tabs.&lt;/span&gt;
network:
    version: 2
    ethernets:
        ens3:
            dhcp4: no            &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Again, check the settings are ok, then press Enter.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;netplan try&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://netplan.io/examples&quot;&gt;Netplan Examples&lt;/a&gt;&lt;/p&gt;</content><author><name>Rico Sharp</name><email>rico.sharp@gmail.com</email></author><summary type="html">This post will show you how to configure a static IP address with netplan on Ubuntu 18.04 Server</summary></entry><entry><title type="html">Samba 4 Active Directory Domain Controller on Ubuntu 18.04 Server</title><link href="http://localhost:4000/posts/2019/Samba-4-Active-Directory-Domain-Controller-on-Ubuntu-18-04-Server" rel="alternate" type="text/html" title="Samba 4 Active Directory Domain Controller on Ubuntu 18.04 Server" /><published>2019-08-24T00:00:00-04:00</published><updated>2019-08-24T00:00:00-04:00</updated><id>http://localhost:4000/posts/2019/Samba-4-Active-Directory-Domain-Controller-on-Ubuntu-18-04-Server</id><content type="html" xml:base="http://localhost:4000/posts/2019/Samba-4-Active-Directory-Domain-Controller-on-Ubuntu-18-04-Server">&lt;p&gt;This post will outline how to install an Active Directory(AD) Domain Controller on Ubuntu Server 18.04. Yes, that’s right…Active Directory on a linux host. Not a backup domain controller but a functional AD that you can create users with, join computers to, and set up group policy.&lt;/p&gt;

&lt;h2 id=&quot;network-configuration&quot;&gt;Network configuration&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Hostname&lt;/th&gt;
      &lt;th&gt;Domain&lt;/th&gt;
      &lt;th&gt;IP Address&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;dc1&lt;/td&gt;
      &lt;td&gt;ad.ricosharp.com&lt;/td&gt;
      &lt;td&gt;192.168.122.70&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;configure-networking&quot;&gt;Configure networking&lt;/h2&gt;
&lt;p&gt;Configure system hostname&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;hostnamectl set-hostname dc1&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Edit the hosts files so the hostname resolves to its IP address&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/hosts
&lt;span class=&quot;c&quot;&gt;# Add this line to /etc/hosts so that dc1 resolves to 192.168.122.70&lt;/span&gt;
192.168.122.70  dc1 dc1.ad.ricosharp.com&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Note that Ubuntu 18.04 is now using netplan to configure IP addresses on systems. I will outline a basic configuration in a future post&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;update-system-and-install-required-packages&quot;&gt;Update system and install required packages&lt;/h2&gt;

&lt;p&gt;Update and reboot the system&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt update &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt upgrade &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;reboot&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Install relevant samba, winbind, and kerberos packages. The installation will prompt for kerberos settings and will give an error at the end of installation. Ignore this for now and accept the defaults. This will be configured properly later as part of the AD installation.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt install samba smbclient winbind libpam-winbind libnss-winbind krb5-kdc libpam-krb5 &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Rename samba and kerberos files. You need to start from a clean environment when starting the samba AD setup.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mv /etc/samba/smb.conf /etc/samba/smb.conf.orig
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mv /etc/krb5.conf /etc/krb5.conf.orig&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;run-the-samba-ad-setup&quot;&gt;Run the samba AD setup&lt;/h2&gt;

&lt;p&gt;All the default settings are fine. The only change I make is to set the DNS forwarder to 8.8.8.8. You can also use a different DNS backend. But this is out of the scope of this post for a simple setup.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;samba-tool domain provision &lt;span class=&quot;nt&quot;&gt;--use-rfc2307&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--interactive&lt;/span&gt;
Realm &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;AD.RICOSHARP.COM]: 
 Domain &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;AD]: 
 Server Role &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;dc, member, standalone&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;dc]: 
 DNS backend &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;SAMBA_INTERNAL, BIND9_FLATFILE, BIND9_DLZ, NONE&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;SAMBA_INTERNAL]: 
 DNS forwarder IP address &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;write &lt;span class=&quot;s1&quot;&gt;'none'&lt;/span&gt; to disable forwarding&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;127.0.0.53]: 8.8.8.8
Administrator password: 
Retype password: 
Looking up IPv4 addresses
Looking up IPv6 addresses
No IPv6 address will be assigned
Setting up share.ldb
Setting up secrets.ldb
Setting up the registry
Setting up the privileges database
Setting up idmap db
Setting up SAM db
Setting up sam.ldb partitions and settings
Setting up sam.ldb rootDSE
Pre-loading the Samba 4 and AD schema
Adding DomainDN: &lt;span class=&quot;nv&quot;&gt;DC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ad,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ricosharp,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;com
Adding configuration container
Setting up sam.ldb schema
Setting up sam.ldb configuration data
Setting up display specifiers
Modifying display specifiers
Adding users container
Modifying users container
Adding computers container
Modifying computers container
Setting up sam.ldb data
Setting up well known security principals
Setting up sam.ldb users and groups
Setting up self join
Adding DNS accounts
Creating &lt;span class=&quot;nv&quot;&gt;CN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;MicrosoftDNS,CN&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;System,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ad,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ricosharp,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;com
Creating DomainDnsZones and ForestDnsZones partitions
Populating DomainDnsZones and ForestDnsZones partitions
Setting up sam.ldb rootDSE marking as synchronized
Fixing provision GUIDs
A Kerberos configuration suitable &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Samba AD has been generated at /var/lib/samba/private/krb5.conf
Setting up fake yp server settings
Once the above files are installed, your Samba AD server will be ready to use
Server Role:           active directory domain controller
Hostname:              dc1
NetBIOS Domain:        AD
DNS Domain:            ad.ricosharp.com
DOMAIN SID:            S-1-5-21-2060062981-3252955935-809771608&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Copy the provisioned kerberos configuration file to the kerberos configuration file location&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;cp /var/lib/samba/private/krb5.conf /etc&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;test-the-configuration&quot;&gt;Test the configuration&lt;/h2&gt;
&lt;p&gt;Samba can now be run. But before setting up with systemd, start samba and run some tests with DNS.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;samba&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Test DNS&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;host &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; SRV _ldap._tcp.ad.ricosharp.com
Host _ldap._tcp.ad.ricosharp.com not found: 3&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;NXDOMAIN&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;host &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; SRV _kerberos._udp.ad.ricosharp.com
Host _kerberos._udp.ad.ricosharp.com not found: 3&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;NXDOMAIN&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;host &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; A dc1.ad.ricosharp.com
dc1.ad.ricosharp.com has address 192.168.122.70&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is not good as without DNS, AD will fail to run properly. If we run netstat to see what processes are listening on port 53, we can see that systemd-resolve is running in addition to samba.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;netstat &lt;span class=&quot;nt&quot;&gt;-tulpn&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; :53
tcp        0      0 127.0.0.53:53           0.0.0.0:&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;               LISTEN      688/systemd-resolve 
tcp6       0      0 :::53                   :::&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;                    LISTEN      4368/samba          
udp        0      0 127.0.0.53:53           0.0.0.0:&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;                           688/systemd-resolve 
udp6       0      0 :::53                   :::&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;                                4368/samba       &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A quick and dirty way to make sure that samba is the only process listening to DNS queries is to disable the systemd-resolved service.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl stop systemd-resolved
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl disable systemd-resolved
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;unlink /etc/resolv.conf
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/resolv.conf
nameserver 192.168.122.70
search ad.ricosharp.com
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;reboot&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Test DNS again. It looks like everything is now working.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;samba
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;host &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; SRV _ldap._tcp.ad.ricosharp.com
_ldap._tcp.ad.ricosharp.com has SRV record 0 100 389 dc1.ad.ricosharp.com.
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;host &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; SRV _kerberos.udp.ad.ricosharp.com
Host _kerberos.udp.ad.ricosharp.com not found: 3&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;NXDOMAIN&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;host &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; A dc1.ad.ricosharp.com
dc1.ad.ricosharp.com has address 192.168.122.70&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Let’s also go ahead and test kerberos authentication. Everything here looks in order.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kinit Administrator
Password &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Administrator@AD.RICOSHARP.COM: 
Warning: Your password will expire &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;41 days on Sat 05 Oct 2019 04:12:28 PM UTC
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;klist
Ticket cache: FILE:/tmp/krb5cc_1000
Default principal: Administrator@AD.RICOSHARP.COM

Valid starting       Expires              Service principal
08/24/2019 16:42:07  08/25/2019 02:42:07  krbtgt/AD.RICOSHARP.COM@AD.RICOSHARP.COM
	renew &lt;span class=&quot;k&quot;&gt;until &lt;/span&gt;08/25/2019 16:42:04&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;configure-samba-ad-to-start-with-systemd&quot;&gt;Configure samba AD to start with systemd&lt;/h2&gt;
&lt;p&gt;Now that this is running, kill samba again so we can begin the process using systemd&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ps &lt;span class=&quot;nt&quot;&gt;-aux&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;samba
root      1134  0.0  2.1 542992 44676 ?        Ss   16:34   0:00 samba
root      1135  0.0  1.2 542992 25568 ?        S    16:34   0:00 samba
root      1136  0.0  1.8 547144 37744 ?        S    16:34   0:00 samba
root      1137  0.0  1.1 542996 22948 ?        S    16:34   0:00 samba
root      1138  0.0  1.4 542992 28740 ?        S    16:34   0:00 samba
root      1140  0.0  1.2 542992 25104 ?        S    16:34   0:00 samba
root      1141  0.5  1.5 542992 32564 ?        S    16:34   0:01 samba
root      1142  0.0  1.2 542992 25708 ?        S    16:34   0:00 samba
root      1143  0.0  1.4 542992 29244 ?        S    16:34   0:00 samba
root      1144  0.0  1.4 542992 28820 ?        S    16:34   0:00 samba
root      1145  0.0  1.2 542992 25568 ?        S    16:34   0:00 samba
root      1146  0.0  1.2 542992 25044 ?        S    16:34   0:00 samba
root      1147  0.0  1.8 542992 38052 ?        S    16:34   0:00 samba
root      1148  0.0  1.3 542992 27584 ?        S    16:34   0:00 samba
root      1149  0.0  1.5 543412 31340 ?        S    16:34   0:00 samba
root      1150  0.0  1.1 542996 22948 ?        S    16:34   0:00 samba
rico      1198  0.0  0.0  13136  1004 pts/0    S+   16:38   0:00 &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;auto samba

~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo kill &lt;/span&gt;1134
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ps &lt;span class=&quot;nt&quot;&gt;-aux&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;samba
rico      1203  0.0  0.0  13136  1152 pts/0    S+   16:38   0:00 &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;auto samba&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Mask the smbd, nmbd, winbind services and unmask the samba-ad-dc service&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl mask smbd nmbd winbind
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl disable smbd nmbd winbind
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl stop smbd nmbd winbind
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl unmask samba-ad-dc
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl start samba-ad-dc
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;samba-ad-dc&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Reboot and test&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;reboot
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl status samba-ad-dc&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;join-a-computer-to-the-domain&quot;&gt;Join a computer to the domain&lt;/h2&gt;

&lt;p&gt;To join the domain on a Windows 10 computer, do the following:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: Make sure that your DNS is pointing to dc1 (192.168.122.70)&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Go to Start &amp;gt; Settings&lt;/li&gt;
  &lt;li&gt;Click Accounts&lt;/li&gt;
  &lt;li&gt;Access Work or School&lt;/li&gt;
  &lt;li&gt;Click Connect&lt;/li&gt;
  &lt;li&gt;Click Join this device to a local Active Directory domain&lt;/li&gt;
  &lt;li&gt;Type ad.ricosharp.com and enter the Administrator username/password for the domain&lt;/li&gt;
  &lt;li&gt;Select Skip to Add an account&lt;/li&gt;
  &lt;li&gt;Select Restart Now&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;An alternative way, and the way that I’m most used to is this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Open the File Explorer&lt;/li&gt;
  &lt;li&gt;Right click This PC &amp;gt; Properties&lt;/li&gt;
  &lt;li&gt;Select Change settings under the Computer name, domain, and workgroup settings section&lt;/li&gt;
  &lt;li&gt;Click the Change button&lt;/li&gt;
  &lt;li&gt;Select Domain and enter ad.ricosharp.com&lt;/li&gt;
  &lt;li&gt;Click ok, enter an Administrator username/password for the domain and reboot&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;create-a-user-account&quot;&gt;Create a user account&lt;/h2&gt;
&lt;p&gt;There are two ways you can manage user accounts. Firstly, you can use samba-tool. For example, to create a new user called user1, issue the following 
command:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;samba-tool user create user1&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The second way is to install the Remote System Administration Tools (RSAT) on a Windows 10 computer. You can download the RSAT from &lt;a href=&quot;https://www.microsoft.com/en-us/download/details.aspx?id=45520&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once installed, open Active Directory Users and Computers from Start &amp;gt; Windows Administrative Tools. Expand the active directory domain name (ad.ricosharp.com) and open the Users organizational unit. Right click and select New &amp;gt; User.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://wiki.samba.org/index.php/Setting_up_Samba_as_an_Active_Directory_Domain_Controller&quot;&gt;Setting up Samba as an Active Directory Domain Controller&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://wiki.samba.org/index.php/Managing_the_Samba_AD_DC_Service_Using_Systemd&quot;&gt;Managing the Samba AD DC Service Using Systemd&lt;/a&gt;&lt;/p&gt;</content><author><name>Rico Sharp</name><email>rico.sharp@gmail.com</email></author><summary type="html">How to build an Active Directory Domain Controller using Samba 4 on a linux host</summary></entry><entry><title type="html">Windows 10 deployment with Linux - Automating the Install</title><link href="http://localhost:4000/posts/2019/Windows-deployment-with-Linux-Automating-the-Install" rel="alternate" type="text/html" title="Windows 10 deployment with Linux - Automating the Install" /><published>2019-05-18T00:00:00-04:00</published><updated>2019-05-18T00:00:00-04:00</updated><id>http://localhost:4000/posts/2019/Windows-deployment-with-Linux-Automating-the-Install</id><content type="html" xml:base="http://localhost:4000/posts/2019/Windows-deployment-with-Linux-Automating-the-Install">&lt;p&gt;My &lt;a href=&quot;https://blog.ricosharp.com/posts/2019/Windows-deployment-with-Linux&quot;&gt;previous post&lt;/a&gt; about Windows 10 Deployment with Linux was focussed on how to get up and running. But the deployment process requires quite a bit of user interaction. For example, after network booting, you have to login to the deployment share. You then have to select the task sequence and set a bunch of other parameters. All of these steps can be automated to the point where there is zero user interaction.&lt;/p&gt;

&lt;p&gt;In order to achieve a fully automated installation, you need to set some parameters in the CustomSettings.ini and Bootstrap.ini files. What these parameters do should be self evident in the configuration below.&lt;/p&gt;

&lt;p&gt;My personal preference is not to fully automate a deployment. This gives you a way out if you accidentally network boot into the Windows PE environment, which would then automatically begin the Task Sequence. What I prefer to do force a page from the wizard to show, such as the Task Sequence selection (SkipTaskSequence=NO).&lt;/p&gt;

&lt;h2 id=&quot;customsettingsini&quot;&gt;CustomSettings.ini&lt;/h2&gt;

&lt;p&gt;There are two ways to edit this file:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Open \\%DeployRoot%\Control\CustomSettings.ini with a text editor such as notepad.&lt;/li&gt;
  &lt;li&gt;In the Deployment Workbench, right click your Deployment Share then select properties. The CustomSettings.ini file can be edited from the Rules tab.&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[Settings]
Priority=Default
Properties=MyCustomProperty

[Default]
OSInstall=Y
SkipCapture=YES
SkipAdminPassword=YES
SkipProductKey=YES
SkipComputerBackup=YES
SkipBitLocker=YES
SkipTaskSequence=YES
TaskSequenceID=&quot;Windows 10 Deployment&quot;
SkipComputerName=YES
SkipDomainMembership=YES
SkipUserData=YES
SkipLocaleSelection=YES
TimeZoneName=&quot;Eastern Standard Time&quot;
SkipTimeZone=YES
SkipSummary=YES&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;booststrapini&quot;&gt;Booststrap.ini&lt;/h2&gt;

&lt;p&gt;There are two ways to edit this file:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Open \\%DeployRoot%\Control\Bootstrap.ini with a text editor such as notepad.&lt;/li&gt;
  &lt;li&gt;In the Deployment Workbench, right click your Deployment Share then select properties. Select the Rules tab then click Edit Bootstrap.ini.&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[Settings]
Priority=Default

[Default]
DeployRoot=\\192.168.122.100\mdt$
UserID=mdtread
UserPassword=password
UserDomain=192.168.122.100
SkipBDDWelcome=YES&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/sccm/mdt/toolkit-reference&quot;&gt;Toolkit Reference for the Microsoft Deployment Toolkit&lt;/a&gt;&lt;/p&gt;</content><author><name>Rico Sharp</name><email>rico.sharp@gmail.com</email></author><summary type="html">A continuation to deploying Windows 10 with MDT and Linux, with a focus on automating the process</summary></entry><entry><title type="html">Windows 10 deployment with Linux - Initial Setup</title><link href="http://localhost:4000/posts/2019/Windows-deployment-with-Linux-Initial-Setup" rel="alternate" type="text/html" title="Windows 10 deployment with Linux - Initial Setup" /><published>2019-05-13T00:00:00-04:00</published><updated>2019-05-13T00:00:00-04:00</updated><id>http://localhost:4000/posts/2019/Windows-deployment-with-Linux-Initial-Setup</id><content type="html" xml:base="http://localhost:4000/posts/2019/Windows-deployment-with-Linux-Initial-Setup">&lt;p&gt;I’ve always been under the impression that you need Windows Deployment Services (WDS) in order to deploy Windows with the Microsoft Deployment Toolkit (MDT). But it turns out you need nothing more than a Samba share, TFTP server, and a few tweaks to DHCP to get a pretty solid set up.&lt;/p&gt;

&lt;p&gt;This procedure involves generating a boot image with MDT and copying that image to a TFTP server. A client then PXE boots, loads that image into memory through memdisk and runs the task sequence to install Windows. You will of course require one Windows machine to configure the task sequences.&lt;/p&gt;

&lt;p&gt;This guide only contains the barebones installation of Windows through a Deployment Share. You can add software and automate the process to provide a zero touch installation. More on that in a future post.&lt;/p&gt;

&lt;h1 id=&quot;requirements&quot;&gt;Requirements&lt;/h1&gt;
&lt;p&gt;Below are the requirements:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#Linux computer with a Samba share&quot;&gt;Linux computer with a Samba share&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#Windows 10 computer with MDT&quot;&gt;Windows 10 computer with MDT&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#TFTP Server&quot;&gt;TFTP server&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#DHCP Server&quot;&gt;DHCP server&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To keep things simple, I will configure Samba, DHCP, and TFTP on the same computer. I will be using CentOS in this guide but these steps should be easily portable to other flavours of Linux.&lt;/p&gt;

&lt;p&gt;This guide is based on a virtual environment using KVM. The CentOS computer will be configured with an IP address of 192.168.122.100/24. All other computers (Windows 10, deployment machine) are virtual and configured to use DHCP.&lt;/p&gt;

&lt;p&gt;The CentOS computer has been installed with the CentOS minimal ISO. The latest updates have been installed.&lt;/p&gt;

&lt;h1 id=&quot;steps&quot;&gt;Steps&lt;/h1&gt;
&lt;h2 id=&quot;linux-computer-with-a-samba-share&quot;&gt;&lt;a name=&quot;Linux computer with a Samba share&quot;&gt;Linux computer with a Samba share&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Install samba and policycoreutils-python. The latter package will give us the semanage command for SELinux.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# yum install &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; samba policycoreutils-python&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Create two user accounts; mdtread and mdtwrite. The mdtread account will used to connect to the deployment share during deployment. The mdtwrite account is what the Windows 10 computer will use to connect and make changes to the deployment share. These accounts are only needed for authentication so we won’t create a home directory (-M) or give them a shell (-s /sbin/nologin).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# useradd &lt;span class=&quot;nt&quot;&gt;-M&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; /sbin/nologin mdtread
~]# useradd &lt;span class=&quot;nt&quot;&gt;-M&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; /sbin/nologin mdtwrite
~]# passwd mdtread
~]# passwd mdtread
~]# smbpasswd &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; mdtread
~]# smbpasswd &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; mdtwrite&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Create and configure the MDT Share for Samba. I create this as a hidden share so it does not appear in an explorer window. I remove everything in the default smb.conf except the [global] section.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# mkdir &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /data/mdt
~]# chown &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; mdtwrite:mdtwrite /data/mdt
~]# vi /etc/samba/smb.conf
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdt&lt;span class=&quot;nv&quot;&gt;$]&lt;/span&gt;
    path &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; /data/mdt
    valid users &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; mdtread mdtwrite
    write list &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; mdtwrite&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Verify everything is ok with the Samba configuration file&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# testparm&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Configure SELinux to allow Samba access to the mdt directory. Verify this with the ls commmand.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# semanage fcontext &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; samba_share_t &lt;span class=&quot;s2&quot;&gt;&quot;/data/mdt(/.*)?&quot;&lt;/span&gt;
~]# restorecon /data/mdt
~]# &lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-alZ&lt;/span&gt; /data/mdt&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# systemctl start smb
~]# systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;smb
~]# firewall-cmd &lt;span class=&quot;nt&quot;&gt;--add-service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;samba
~]# firewall-cmd &lt;span class=&quot;nt&quot;&gt;--add-service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;samba &lt;span class=&quot;nt&quot;&gt;--permanent&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;optional&quot;&gt;Optional&lt;/h4&gt;
&lt;p&gt;If you must enable NetBIOS, start and enable nmbd. This will allow you to resolve to the hostname of your Linux computer through NetBIOS, rather than DNS.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# systemctl start nmb
~]# systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;nmb&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;verify-share-access&quot;&gt;Verify Share Access&lt;/h4&gt;
&lt;p&gt;On your Windows 10 computer, verify you can access the share. Click on the Start menu and type \\192.168.122.100\mdt$&lt;/p&gt;

&lt;h2 id=&quot;windows-10-computer-with-mdt&quot;&gt;&lt;a name=&quot;Windows 10 computer with MDT&quot;&gt;Windows 10 computer with MDT&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;install-mdt-and-adk&quot;&gt;Install MDT and ADK&lt;/h3&gt;
&lt;p&gt;You will need to download and install the following:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Microsoft Deployment Toolkit&lt;/li&gt;
  &lt;li&gt;Windows 10 Assessment and Deployment Kit (I just install Deployment Tools and Windows PE)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A simple Google search will bring up the download links for this software.&lt;/p&gt;

&lt;h3 id=&quot;add-deployment-share-to-mdt&quot;&gt;Add Deployment Share to MDT&lt;/h3&gt;

&lt;p&gt;Once MDT and ADK are installed, open the Deployment Workbench.&lt;/p&gt;

&lt;p&gt;Right click Deployment Shares and select New Deployment Share.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/new-deployment-share.png&quot; alt=&quot;New Deployment Share&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you try to add the deployment share through its UNC path, you will receieve an error. This is because you haven’t been authenticated yet. What you can do to work around this is open the Credential Manager from the Control Panel and add new Windows credentials for your share (192.168.122.100, mdtwrite, &amp;lt;password&amp;gt;).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/add-unc-path.png&quot; alt=&quot;Add using UNC path&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/credential-manager.png&quot; alt=&quot;Credential Manager&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Follow the rest of the prompts. These can always be changed at a later stage. The Deployment Workbench will now copy some files to the MDT share.&lt;/p&gt;

&lt;h3 id=&quot;obtain-windows-10-iso-and-upload-to-deployment-share&quot;&gt;Obtain Windows 10 ISO and Upload to Deployment Share&lt;/h3&gt;
&lt;p&gt;You will need a Windows 10 ISO to upload to the MDT share. Thankfully this can be downloaded quite easily from the Microsoft website, unlike previous versions of Windows.&lt;/p&gt;

&lt;p&gt;If using a Mac or Linux computer, you can go &lt;a href=&quot;https://www.microsoft.com/en-us/software-download/windows10ISO&quot;&gt;here&lt;/a&gt; and select the edition and language to download.&lt;/p&gt;

&lt;p&gt;Downloading from a Windows machine requires a few more steps. It’s nothing hard but we just need to trick the web server into thinking that we are using another operating system, otherwise we are presented wtith the Windows 10 installation media download. In Google Chrome, go to the &lt;a href=&quot;https://www.microsoft.com/en-us/software-download/windows10ISO&quot;&gt;Windows 10 download site&lt;/a&gt;. Open the Developer tools (CTRL + SHIFT + I). Click the three dots at the top right hand corner &amp;gt; More Tools &amp;gt; Network Conditions. Uncheck Select Automatically and select a non-Windows OS, such as Chrome - Mac. Hit the refresh button and you will be able to select the edition and language to download.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/network-conditions.png&quot; alt=&quot;Network Conditions&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/chrome-mac.png&quot; alt=&quot;Chrome Mac&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I download the English version. I haven’t verified this but I believe the difference between English and English International is the English version is US English. The English International version is British English and contains additional keyboard layouts.&lt;/p&gt;

&lt;p&gt;Once the download has completed, mount the ISO.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/mount-os.png&quot; alt=&quot;Mount OS&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Back in the Deployment Share, right click Operating Systems and select Import Operating System.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/import-os.png&quot; alt=&quot;Import OS&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Make sure Full set of source files is checked and click next.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/os-type.png&quot; alt=&quot;OS Type&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Browse to the drive where the ISO was mounted and click next.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/os-source.png&quot; alt=&quot;OS Source&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Follow the rest of the prompts. The OS files will begin uploadeding to the Deployment Share. This may take a few minutes.&lt;/p&gt;

&lt;p&gt;Now we want to create a task sequence. Right click Task Sequences and select New Task Sequence.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/new-task-sequence.png&quot; alt=&quot;New Task Sequence&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Give the Task Sequence an ID and Name and click next.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/task-sequence-name.png&quot; alt=&quot;Task Sequence Name&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Make sure Standard Client Task Sequence is selected and click next.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/task-sequence-template.png&quot; alt=&quot;Task Sequence Template&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Select the OS that you are deploying. Here I’m using Windows 10 Pro.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/task-sequence-select-os.png&quot; alt=&quot;Task Sequence Select OS&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Follow the rest of the prompts. I only have individual activation keys, so I don’t specify them during the install.&lt;/p&gt;

&lt;p&gt;We are now ready to generate the ISO that we can boot for deployment. Right click on the Deployment Share and select Update Deployment Share. Since this is a new Deployment Share, just click next through the prompts. The ISO that needs to be uploaded to the TFTP Server will be generated. This may take a few minutes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/update-deployment-share.png&quot; alt=&quot;Update Deployment Share&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;tftp-server&quot;&gt;&lt;a name=&quot;TFTP Server&quot;&gt;TFTP server&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Install TFTP Server.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# yum install &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; tftp-server&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Enable TFTP Server in its configuration file by changing the disable line from yes to no.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# vi /etc/xinetd.d/tftp
disable &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; no&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Download syslinux. We need to use memdisk to boot the ISO. I just pull syslinux from the CentOS repos.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# yum install &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; syslinux&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Copy the necessary syslinux files to the tftpboot directory.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# cp /usr/share/syslinux/pxelinux.0 /var/lib/tftpboot/
~]# cp /usr/share/syslinux/memdisk /var/lib/tftpboot/
~]# cp /usr/share/syslinux/menu.c32 /var/lib/tftpboot/&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Copy the LiteTouch ISO to the tftpboot directory.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# cp /data/mdt/Boot/LiteTouchPE_x64.iso /var/lib/tftpboot/&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Create the boot menu.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# mkdir &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /var/lib/tftpboot/pxelinux.cfg
~]# vi /var/lib/tftpboot/pxelinux.cfg/default
default menu.c32
prompt 0
timeout 300
ONTIMEOUT 1

menu title &lt;span class=&quot;c&quot;&gt;########## OS Deploy ##########&lt;/span&gt;

label 1
menu label ^1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Boot from &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;drive
localboot 0

label 2
menu label ^2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Windows 10
&lt;span class=&quot;c&quot;&gt;#menu default&lt;/span&gt;
kernel memdisk
append iso &lt;span class=&quot;nv&quot;&gt;initrd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;LiteTouchPE_x64.iso raw&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Start the TFTP server and enable on startup.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# systemctl start tftp
~]# systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;tftp&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Configure firewall to allow TFTP through.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# firewall-cmd &lt;span class=&quot;nt&quot;&gt;--add-service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;tftp
~]# firewall-cmd &lt;span class=&quot;nt&quot;&gt;--add-service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;tftp &lt;span class=&quot;nt&quot;&gt;--permanent&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;dhcp-server&quot;&gt;&lt;a name=&quot;DHCP Server&quot;&gt;DHCP Server&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Install the DHCP server&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# yum install &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; dhcp&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Configure the DHCP server&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# vi /etc/dhcp/dhcpd.conf
&lt;span class=&quot;nv&quot;&gt;DHCPDARGS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;eth0&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#Listen on eth0&lt;/span&gt;
subnet 192.168.122.0 netmask 255.255.255.0
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        option routers                  192.168.122.1&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        option subnet-mask              255.255.255.0&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        option domain-search            &lt;span class=&quot;s2&quot;&gt;&quot;lab.local&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        option domain-name-servers      192.168.122.1&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        option time-offset              &lt;span class=&quot;nt&quot;&gt;-18000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;     &lt;span class=&quot;c&quot;&gt;# Eastern Standard Time&lt;/span&gt;
        filename                        &lt;span class=&quot;s2&quot;&gt;&quot;pxelinux.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        next-server                     192.168.122.100&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        range                           192.168.122.10 192.168.122.99&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Start the DHCP service and enable on startup&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# systemctl start dhcpd
~]# systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;dhcpd&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Configure firewall to allow DHCP requests&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# firewall-cmd &lt;span class=&quot;nt&quot;&gt;--add-service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;dhcp
~]# firewall-cmd &lt;span class=&quot;nt&quot;&gt;--add-service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;dhcp &lt;span class=&quot;nt&quot;&gt;--permanent&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;finishing-touches&quot;&gt;Finishing Touches&lt;/h2&gt;

&lt;p&gt;When the Deployment Share was created, a few files and folders were created on it. We need to adjust some of the permissions so our mdtread user can access the share.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# chmod &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; 755 /data/mdt&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;deployment&quot;&gt;Deployment&lt;/h2&gt;

&lt;p&gt;We are now ready to deploy Windows 10.&lt;/p&gt;

&lt;p&gt;Network boot the computer and select Windows 10.
&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/pxe-win-10.png&quot; alt=&quot;PXE Windows 10&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Select Run Deployment Wizard to install a new Operating System.
&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/run-deployment-wizard.png&quot; alt=&quot;Run Deployment Wizard&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Enter the read only credentials of the Deployment Share.
&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/deployment-credentials.png&quot; alt=&quot;Deployment Credentials&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Select the Windows 10 Deployment Task Sequence and follow the rest of the prompts. Follow the rest of the prompts. Windows 10 will now be installed.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/deployment-install.png&quot; alt=&quot;Deployment Install&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://wiki.samba.org/index.php/Setting_up_Samba_as_a_Standalone_Server#Creating_a_Local_User_Account&quot;&gt;Samba - Creating Local Accounts&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.samba.org/samba/docs/current/man-html/smb.conf.5.html&quot;&gt;Samba Configuration File&lt;/a&gt;&lt;/p&gt;</content><author><name>Rico Sharp</name><email>rico.sharp@gmail.com</email></author><summary type="html">A guide to deploying Windows 10 over a network with Microsoft Deployment Toolkit (MDT) and Linux</summary></entry><entry><title type="html">Private VLAN’s on a Cisco switch</title><link href="http://localhost:4000/posts/2019/Private-VLANs-on-a-Cisco-switch" rel="alternate" type="text/html" title="Private VLAN's on a Cisco switch" /><published>2019-05-12T00:00:00-04:00</published><updated>2019-05-12T00:00:00-04:00</updated><id>http://localhost:4000/posts/2019/Private-VLANs-on-a-Cisco-switch</id><content type="html" xml:base="http://localhost:4000/posts/2019/Private-VLANs-on-a-Cisco-switch">&lt;p&gt;All hosts in an a broadcast domain can communicate with each other. For example, Figure 1 below shows 5 PC’s connected to a single switch, each configured with an IP address on the same subnet. If PC-1 was to ping PC-5, it will send an ARP request first, flooding the network and reaching all hosts. PC-5 will respond with an ARP reply and ICMP traffic will then be able to flow between hosts.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/private-vlans.png&quot; alt=&quot;Private VLAN Topology&quot; /&gt;
&lt;em&gt;Figure 1: Private VLAN topology&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;But what if we wanted to stop PC-1 from communicating with PC-5, without creating additional subnets? Private VLANs can be set up for this purpose. When configured correctly, a private VLAN can segregate a VLAN so that some hosts can communicate with each other, whilst others cannot, even though all hosts are on same subnet sharing the same gateway.&lt;/p&gt;

&lt;p&gt;When configuring private VLAN’s, a primary VLAN is configured first. Secondary VLAN’s are then associated with it.&lt;/p&gt;

&lt;p&gt;Each secondary VLAN can be set up as community VLAN, or an isolated VLAN. In a community VLAN, all hosts in that community VLAN can communicate with each other. Hosts in an isolated VLAN cannot communicate with any other host.&lt;/p&gt;

&lt;p&gt;The only exception to this rule is when a port is set up in promiscuous mode. A host connected a promiscuous port can communicate with all secondary VLANs. This is mainly reserved for devices such as routers, which would be the gateway of all the clients.&lt;/p&gt;

&lt;h2 id=&quot;configuration&quot;&gt;Configuration&lt;/h2&gt;

&lt;p&gt;In Figure 1, PC-1 and PC-2 are in a community VLAN, so both PC’s can communicate with each other. They can also communicate with R1, because R1 is connected to a port in promiscous mode. However, they cannot communicate with any other host (PC-3, PC-4, PC-5).&lt;/p&gt;

&lt;p&gt;PC-4 and PC-5 are also in a community VLAN, but a different one than that of PC-1 and PC-2. They too can communcate with R1 but not to any other host (PC-1, PC-2, PC-3).&lt;/p&gt;

&lt;p&gt;PC-3 is in an isolated VLAN. It cannot communicate with any other host, except for R1.&lt;/p&gt;

&lt;h3 id=&quot;pc-1&quot;&gt;PC-1&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ip 10.1.1.2 /24
save&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;pc-2&quot;&gt;PC-2&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ip 10.1.1.3 /24
save&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;pc-3&quot;&gt;PC-3&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ip 10.1.1.4 /24
save&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;pc-4&quot;&gt;PC-4&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ip 10.1.1.5 /24
save&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;pc-5&quot;&gt;PC-5&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ip 10.1.1.6 /24
save&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;sw1&quot;&gt;SW1&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;vlan 10
private-vlan community

vlan 20
private-vlan isolated

vlan 30
private-vlan community

vlan 100
private-vlan primary
private-vlan association 10,20,30

interface range g0/0-1
switchport mode private-vlan host
switchport private-vlan association host 100 10

interface g0/2
switchport mode private-vlan host
switchport private-vlan association host 100 20

interface range g0/3,g1/0
switchport mode private-vlan host
switchport private-vlan association host 100 30

interface g3/3
switchport mode private-vlan promiscuous
switchport private-vlan mapping 100 10,20,30

end

write memory&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;r1&quot;&gt;R1&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;interface f0/0
ip address 10.1.1.1 255.255.255.0
no shutdown

end

write memory&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>Rico Sharp</name><email>rico.sharp@gmail.com</email></author><summary type="html">How to configure Private VLAN's on a Cisco switch</summary></entry><entry><title type="html">Fedora 30 Customization</title><link href="http://localhost:4000/posts/2019/Fedora-30-Customization" rel="alternate" type="text/html" title="Fedora 30 Customization" /><published>2019-05-12T00:00:00-04:00</published><updated>2019-05-12T00:00:00-04:00</updated><id>http://localhost:4000/posts/2019/Fedora-30-Customization</id><content type="html" xml:base="http://localhost:4000/posts/2019/Fedora-30-Customization">&lt;p&gt;This is pretty much the same script as my &lt;a href=&quot;https://blog.ricosharp.com/posts/2019/Ubuntu-Customization&quot;&gt;Ubuntu&lt;/a&gt; one, minus VLC player. Actually, as I write this I’ve completly forgotten to include Jekyll! I’ll sort that out another day.&lt;/p&gt;

&lt;p&gt;This script is intended to be run under Fedora 30. It isn’t my current desktop environment as I have had a lot of issues with GNS3 under it. But I thought I would update it anyway.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/ricosharp/7d4ce9e70f7b3d614ba2a7f54b9edb29.js&quot;&gt;&lt;/script&gt;</content><author><name>Rico Sharp</name><email>rico.sharp@gmail.com</email></author><summary type="html">A script I use to customize my Fedora 30 environment</summary></entry><entry><title type="html">Ubuntu 18.04 Customization</title><link href="http://localhost:4000/posts/2019/Ubuntu-18-04-Customization" rel="alternate" type="text/html" title="Ubuntu 18.04 Customization" /><published>2019-05-11T00:00:00-04:00</published><updated>2019-05-11T00:00:00-04:00</updated><id>http://localhost:4000/posts/2019/Ubuntu-18-04-Customization</id><content type="html" xml:base="http://localhost:4000/posts/2019/Ubuntu-18-04-Customization">&lt;p&gt;Below is a script that I run after installing Ubuntu. It installs a couple of extra packages that I need and pins my favourite programs to the dash.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/ricosharp/35fbf54c13e4d7614b1e4601998257a3.js&quot;&gt;&lt;/script&gt;</content><author><name>Rico Sharp</name><email>rico.sharp@gmail.com</email></author><summary type="html">A script I use to customize my Ubuntu 18.04 environment</summary></entry><entry><title type="html">Re-streaming video to a multicast address with VLC</title><link href="http://localhost:4000/posts/2019/Re-streaming-video-to-a-multicast-address-with-VLC" rel="alternate" type="text/html" title="Re-streaming video to a multicast address with VLC" /><published>2019-04-30T00:00:00-04:00</published><updated>2019-04-30T00:00:00-04:00</updated><id>http://localhost:4000/posts/2019/Re-streaming-video-to-a-multicast-address-with-VLC</id><content type="html" xml:base="http://localhost:4000/posts/2019/Re-streaming-video-to-a-multicast-address-with-VLC">&lt;p&gt;&lt;a href=&quot;https://www.videolan.org&quot;&gt;VLC&lt;/a&gt; is such a powerful tool. Excuse my ignorance but I have always seen it as just a media player that can play anything I throw at it. But it is capable of so much more!&lt;/p&gt;

&lt;p&gt;Ever since coming across &lt;a href=&quot;https://www.videolan.org/projects/dvblast.html&quot;&gt;dvblast&lt;/a&gt;, which turns out to be a VLC project, I’ve started asking myself how other content could be multicasted over an IP network. Take the &lt;a href=&quot;https://www.abc.net.au/news/newschannel/&quot;&gt;ABC News&lt;/a&gt; television stream from Australia as an example. Is it possible to re-stream this to a multicast group? The answer is yes and VLC is the tool to use.&lt;/p&gt;

&lt;h2 id=&quot;find-the-stream-link&quot;&gt;Find the stream link&lt;/h2&gt;
&lt;p&gt;The first thing to do is to find the streaming link. There are two ways to go about doing this; the easy way and the slightly more difficult way where you may have to get creative. However, the latter method is the one that will always yield a result.&lt;/p&gt;

&lt;p&gt;First, open the source code of the page (In Chrome, CMD + OPTION U on a Mac, or CTRL + U on Windows and Linux). Search for “m3u8”. If something comes up then great! The ABC News stream happens to have this hidden in the source code. However, not all streaming sites will do this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/abc-stream-url.png&quot; alt=&quot;ABC Stream URL&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My preference is to use this second method as the m3u8 file will often point to the specific stream quality. Rather than opening the source code, load the page and where possible, do not play the stream yet. Open the Developer Tools and click on the Network tab (In Chrome, CMD + OPTION + I on Mac, or CTRL + SHIFT + I on Windows and Linux). Here’s where you need to get a little creative and know what to look for. What I tend to do is press the clear button, quickly start and pause the stream and look for “index.m3u8” or “master.m3u8” files.&lt;/p&gt;

&lt;p&gt;In the case of the ABC News Channel, the index.m3u8 file is actually loaded into the page before the video is played. If you mess around with changing the quality, you will find that the index_1.m3u8 file is the one that references the 576p quality stream. Right click on this, select copy and copy link address.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/stream-developer-tools.png&quot; alt=&quot;Stream Developer Tools&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now that we have the stream URL you should test that this is in fact the network stream by using VLC. Go to Media, Open Network Stream, paste the URL and click Play. If your video starts, then you are good to go onto the next steps. Otherwise you will need to keep looking for the stream link.&lt;/p&gt;

&lt;h2 id=&quot;streaming-to-multicast-with-vlc&quot;&gt;Streaming to multicast with VLC&lt;/h2&gt;

&lt;p&gt;This can be done in two ways - through the GUI or using the command line.&lt;/p&gt;

&lt;h3 id=&quot;gui&quot;&gt;GUI&lt;/h3&gt;
&lt;p&gt;I start the stream with the GUI so that I know the parameters to issue to the command line&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Media &amp;gt; Stream&lt;/li&gt;
  &lt;li&gt;Click on the Network Tab (as you can see from the other tabs, VLC can also stream a file, disc, or capture device such as a TV tuner)&lt;/li&gt;
  &lt;li&gt;Paste the URL and click Stream&lt;/li&gt;
  &lt;li&gt;Click Next&lt;/li&gt;
  &lt;li&gt;Select RTP/MPEG Transport Stream from the dropdown and click Add&lt;/li&gt;
  &lt;li&gt;Enter your multicast address and port (e.g 239.255.0.1, 10000) and click Next&lt;/li&gt;
  &lt;li&gt;Select your Transcoding Profile. I uncheck this as I don’t want to transcode into another format&lt;/li&gt;
  &lt;li&gt;Make sure Stream all elementary streams is unchecked and click stream. Here you will notice that a generated stream output string is shown. This is very useful when writing out the command line version of this
&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/vlc-stream-output-string.png&quot; alt=&quot;VLC Output String&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Your video will now be streaming to the multicast group you specified. You can open it in VLC on another computer through Media &amp;gt; Open Network Stream. Enter your multicast address (e.g. rtp://239.255.0.1:10000) and click play.&lt;/p&gt;

&lt;h3 id=&quot;command-line&quot;&gt;Command Line&lt;/h3&gt;

&lt;p&gt;On a Linux machine, you can run VLC through the command line. This is useful if you want to run the stream from a central server that you will not be viewing the video from.&lt;/p&gt;

&lt;p&gt;You can install vlc-nox which is basically VLC without the GUI. With a slight modification to the stream output string in the image above, we can run the same stream created through the GUI in the command line instead.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Install VLC without a GUI&lt;/span&gt;
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt install vlc-nox
&lt;span class=&quot;c&quot;&gt;# Send stream to multicast group&lt;/span&gt;
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vlc &amp;lt;stream_url&amp;gt; &lt;span class=&quot;s1&quot;&gt;'#rtp{dst=10.24.5.240,port=10000,mux=ts}'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--no-sout-all&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--sout-keep&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The video will now begin multicasting to your group. You can open it through Media &amp;gt; Open Network Stream. Enter your multicast address (e.g. rtp://239.255.0.1:10000) and click play.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://wiki.videolan.org/Documentation:Streaming_HowTo/Advanced_Streaming_Using_the_Command_Line/#rtp&quot;&gt;VLC - Streaming HowTo/Advanced Streaming Using the Command Line&lt;/a&gt;&lt;/p&gt;</content><author><name>Rico Sharp</name><email>rico.sharp@gmail.com</email></author><summary type="html">How to stream just about anything to a multicast address using VLC</summary></entry><entry><title type="html">Over the Air TV to IPTV on Raspberry Pi</title><link href="http://localhost:4000/posts/2019/Over-the-Air-to-IPTV-on-Raspberry-Pi" rel="alternate" type="text/html" title="Over the Air TV to IPTV on Raspberry Pi" /><published>2019-04-28T00:00:00-04:00</published><updated>2019-04-28T00:00:00-04:00</updated><id>http://localhost:4000/posts/2019/Over-the-Air-to-IPTV-on-Raspberry-Pi</id><content type="html" xml:base="http://localhost:4000/posts/2019/Over-the-Air-to-IPTV-on-Raspberry-Pi">&lt;p&gt;IPTV is an alternative transport method for broadcasting content, rather than traditional means. Instead of than using coaxial cabling, CAT 5/6 or WiFi might be used instead.&lt;/p&gt;

&lt;p&gt;There are three things to consider when implementing IPTV:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The source&lt;/li&gt;
  &lt;li&gt;The network&lt;/li&gt;
  &lt;li&gt;The client&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The source coming in can be anything from a coaxial connection from your cable provider to an antenna. It could even be an http(s) stream, YouTube video, or even the HDMI output of an external device. These sources would be connected to a distribution device on one side. The other side of this distribution device will be the network.&lt;/p&gt;

&lt;p&gt;You can use unicast addressing to send IPTV over the network. However, unicast traffic is one to one and therefore not scalable in this situation. If five clients are watching the same channel, the same traffic is going over the network five times!&lt;/p&gt;

&lt;p&gt;Multicast is a more efficient means of sending this type of data over a network. It can be used to send a single stream of data to multiple clients. If the five clients are watching the same channel, then the source device is only sending the channel once to those five clients.&lt;/p&gt;

&lt;p&gt;A multitude of devices can be used to tune into an IPTV channel. This could be something as simple as VLC player to a full set top box solution managed by some type of middleware platform.&lt;/p&gt;

&lt;h2 id=&quot;equipment&quot;&gt;Equipment&lt;/h2&gt;
&lt;p&gt;I’m going to keep things simple and use the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Raspberry Pi 3 Model B+&lt;/li&gt;
  &lt;li&gt;Hauppauge WinTV-dualHD USB Tuner&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The distribution device is the Pi. The source is free to air television which I am using a USB TV tuner to access. The Pi’s network port will be connected to my multicast VLAN. I will be accessing these streams from my Macbook Pro using VLC player.&lt;/p&gt;

&lt;p&gt;Digital TV transmits more than one channel on a given frequency. So if there are four channels on one frequency and three on the other, you can send out a total of seven channels to your network. I chose this particular USB TV Tuner because it can pick up two frequencies. One of these is not enough to tune into all the channels in my area. But it is a great device to start learning about IPTV implementation.&lt;/p&gt;

&lt;p&gt;When choosing a tuner, make sure that it is compliant with the standard in your country. Here in the US the standard is ATSC, so the Hauappage USB that I chose supports this. Other countries might use DVD-T, so bare this in mind.&lt;/p&gt;

&lt;h2 id=&quot;write-raspbian-to-sd-card&quot;&gt;Write Raspbian to SD card&lt;/h2&gt;
&lt;p&gt;First let’s put an OS on the Pi. Connect your micro SD card to your computer and identify which disk it is. I’m using a MacBook Pro and the diskutil program.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;diskutil list&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You should be able to identify your micro SD card from the output. In my case, this is /dev/disk2.&lt;/p&gt;

&lt;p&gt;Next, unmount the disk and write the OS to it. I’m using the current April 2019 Raspbian Stretch Lite with kernel version 4.14. After the image has been written to disk, unmount it again and insert the micro SD card into the Pi.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;diskutil unmountdisk /dev/disk2
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;dd &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2019-04-08-raspbian-stretch-lite.img &lt;span class=&quot;nv&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/dev/disk2
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;diskutil unmountdisk /dev/disk2&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;run-updates-and-upgrade-kernel&quot;&gt;Run updates and upgrade kernel&lt;/h2&gt;
&lt;p&gt;Start the Pi and update the system. While we’re at it, let’s enable SSH and reboot to verify it has started.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# update system&lt;/span&gt;
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt update &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt upgrade &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# enable SSH&lt;/span&gt;
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;ssh
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl start ssh
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;reboot&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;At the time of writing, the Raspbian Stretch kernel is 4.14. This kernel only supports one of the tuners inside the Hauppauge WinTV-dualHD USB TV tuner straight out of the box. Kernel version 4.17 added support for both (see &lt;a href=&quot;https://www.linuxtv.org/wiki/index.php/ATSC_USB_devices&quot;&gt;here&lt;/a&gt;). You can update the Pi to 4.19 by issuing the below commands.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# update kernel&lt;/span&gt;
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;rpi-update
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;reboot&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;After rebooting, you should see that both tuners are detected.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; /dev/dvb
adapter0  adapter1&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;install-and-configure-iptv&quot;&gt;Install and Configure IPTV&lt;/h2&gt;
&lt;p&gt;Next, install the tools that we need to scan for channels and provide IPTV over the network.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# install IPTV tools&lt;/span&gt;
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt install dvb-apps dvblast &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You can use the scan program included with dvb-apps to scan for free to air channels in your area. A file containing the frequencies to scan is required. The easiest way to perform the scan is to use a file from /usr/share/dvb/dvb-legacy/atsc (assuming you are in an ATSC country) containing predefined frequencies. I will use the us-ATSC-center-frequencies-8VSB file to perform the scan, then output the results to a channels.conf file.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;scan /usr/share/dvb/dvb-legacy/atsc/us-ATSC-center-frequencies-8VSB &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; channels.conf&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This scan will take a while and will come up with a number of “tuning failed” results. This just means that there is nothing broadcasted on this frequency.&lt;/p&gt;

&lt;p&gt;You can build your own scan file to reduce the amount of time a scan takes. The &lt;a href=&quot;https://antennaweb.org/Address&quot;&gt;AntennaWeb&lt;/a&gt; site is useful when doing this (US only).&lt;/p&gt;

&lt;p&gt;The final channels.conf file will look something like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;channels.conf
WJLA-HD:177028615:8VSB:49:52:3
WJLACHG:177028615:8VSB:65:68:4
WJLACMT:177028615:8VSB:113:116:5
WJLATBD:177028615:8VSB:129:132:6
WUSA-HD:189028615:8VSB:49:52:1
LATV:189028615:8VSB:65:68:2
Justice:189028615:8VSB:81:84:3
WHUT HD:587028615:8VSB:49:52:1
WHUTKid:587028615:8VSB:65:68:2
ION:593028615:8VSB:49:52:3
qubo:593028615:8VSB:65:68:4
IONLife:593028615:8VSB:81:84:5
Shop:593028615:8VSB:97:100:6
HSN:593028615:8VSB:113:116:7
QVC:593028615:8VSB:129:132:8
WTTG-DT:605028615:8VSB:49:52:3
WDCA 20.1:605028615:8VSB:65:68:4
BUZZR 5.2:605028615:8VSB:81:84:5
ME TV 5.3:605028615:8VSB:97:100:6
MOVIES 20.2:605028615:8VSB:113:116:7
HEROES AND ICONS:605028615:8VSB:129:132:8
WRC-HD NBC 4 Washington:677028615:8VSB:49:52:3
COZI TV on WRC-TV:677028615:8VSB:65:68:4
WZDC   :677028615:8VSB:81:84:5
XITOS  :677028615:8VSB:97:100:6&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The channels.conf file can be opened with VLC player to start watching television. However, our goal is to  multicast these channels over a network.&lt;/p&gt;

&lt;p&gt;If you look closely at the channels.conf file, you will see that there are a bunch of different values. The first is the channel name, followed by the frequency, modulation, video PID, audio PID, and SID. You will notice that certain channels have the same frequency. If we pick the 177028615 frequency as an example, we can see four channels. Looking further down at 677028615 we can also see another four channels. Remember that the Hauppauge TV tuner has two adapters? This means that one adapter can be configured to sit on the 177028615 frequency and the other on 677028615. The end result is all eight channels can be transmitted to the multicast network.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.videolan.org/projects/dvblast.html&quot;&gt;DVBlast&lt;/a&gt; will be used to multicast the channels. We need to setup a &lt;a href=&quot;https://github.com/gfto/dvblast/blob/master/README&quot;&gt;config file&lt;/a&gt; containing the multicast groups. To transmit the eight channels on 177028615 and 677028615, two separate config files need to be created:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vi tuner0.conf
&lt;span class=&quot;c&quot;&gt;# Tuner 1 - Frequency 177028615&lt;/span&gt;
239.255.0.1:10000   1   3
239.255.0.2:10000   1   4
239.255.0.3:10000   1   5
239.255.0.4:10000   1   6&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vi tuner1.conf
&lt;span class=&quot;c&quot;&gt;# Tuner 2 - Frequency 677028615&lt;/span&gt;
239.255.0.5:10000   1   3
239.255.0.6:10000   1   4
239.255.0.7:10000   1   5
239.255.0.8:10000   1   6&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Run dvblast to multicast the channels out on the network&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;dvblast &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; 0 &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; 177028615 &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; tuner0.conf &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; VSB_8  &amp;amp;
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;dvblast &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; 1 &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; 677028615 &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; tuner1.conf &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; VSB_8 &amp;amp;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;On another computer, use VLC Player to open one of the streams. On my Macbook Pro I do this through File &amp;gt; Open Network, then enter one of the multicast addresses (e.g. rtp://239.255.0.1:10000)&lt;/p&gt;

&lt;p&gt;You can use something like minisapserver to broadcast the channels to VLC Player using SAP so you don’t need to add enter the multicast addresses each time. I’ll write about this at a later time.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;p&gt;The videos and webpages below were essential references when getting this up and running:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=KI0LuIcFM98&quot;&gt;CWNE88 Youtube - Raspberry Pi Multicast TV server&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.linuxtv.org/wiki/index.php/Hauppauge_WinTV-dualHD&quot;&gt;Linux TV - Hauppauge WinTV dual HD&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/gfto/dvblast/blob/master/README&quot;&gt;DVBlast Config File&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Rico Sharp</name><email>rico.sharp@gmail.com</email></author><summary type="html">How to stream free to air television over an IP network</summary></entry></feed>