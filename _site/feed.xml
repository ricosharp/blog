<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2021-04-11T16:14:18-04:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Rico Sharp</title><subtitle></subtitle><author><name>Rico Sharp</name><email>rico.sharp@gmail.com</email></author><entry><title type="html">Centralized authentication with FreeIPA on Fedora</title><link href="http://localhost:4000/posts/2021/Centralized-authentication-with-FreeIPA-on-Fedora" rel="alternate" type="text/html" title="Centralized authentication with FreeIPA on Fedora" /><published>2021-04-11T00:00:00-04:00</published><updated>2021-04-11T00:00:00-04:00</updated><id>http://localhost:4000/posts/2021/Centralized-authentication-with-FreeIPA-on-Fedora</id><content type="html" xml:base="http://localhost:4000/posts/2021/Centralized-authentication-with-FreeIPA-on-Fedora">&lt;p&gt;The other day I logged into my Pi-Hole to update some DNS entries. I noticed a new version was available and decided to SSH into the device to run this. I tried a bunch of different username/password combinations and was lucky to finally log in. I realised that this was probably the time to implement some sort of centralized authentication on my network.&lt;/p&gt;

&lt;p&gt;This post will outline a basic, single FreeIPA server setup. I am running the FreeIPA server on Fedora 33 Server and the client PC is running Fedora 33 Workstation. I will create a new post in future to include addtional FreeIPA servers with replication.&lt;/p&gt;

&lt;p&gt;The server will be set up with the hostname and IP address in the table below. I have added a DNS entry to this on my Pi-Hole so other FreeIPA servers can find this host later on. It’s also useful as I will be using my host PC to access the FreeIPA web interface.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Hostname&lt;/th&gt;
      &lt;th&gt;IP Address&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;ipa01.ipa.ricosharp.com&lt;/td&gt;
      &lt;td&gt;192.168.122.2&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;If you are following this guide in your own setup, make sure that DNS is resolving correctly. This will be the most likely cause of your issue.&lt;/p&gt;

&lt;h1 id=&quot;freeipa-server&quot;&gt;FreeIPA Server&lt;/h1&gt;

&lt;p&gt;Set a static IP address on the server (192.168.1.7 is my Pi-Hole):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;nmcli con mod &amp;lt;int&amp;gt; ipv4.address 192.168.122.2/24
nmcli con mod &amp;lt;int&amp;gt; ipv4.gateway 192.168.122.1
nmcli con mod &amp;lt;int&amp;gt; ipv4.dns 192.168.1.7
nmcli con mod &amp;lt;int&amp;gt; ipv4.method manual
nmcli con down &amp;lt;int&amp;gt;
nmcli con up &amp;lt;int&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Run any updates to the system and reboot:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;dnf update &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;
reboot&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Set the hostname of the machine to the FQDN of the server:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;hostnamectl set-hostname ipa01.ipa.ricosharp.com&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Update /etc/hosts with the IP address and FQDN (FQDN must be specified first!):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;vi /etc/hosts
&lt;span class=&quot;c&quot;&gt;# Add the following:&lt;/span&gt;
192.168.122.2 ipa01.ipa.ricosharp.com ipa01&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Install the FreeIPA server and FreeIPA DNS packages:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;dnf &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;freeipa-server freeipa-server-dns &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Add the following firewall rules. You can see which ports are opened by viewing /usr/lib/firewalld/services/ldap.xml and /usr/lib/firewalld/services/ldaps.xml&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;firewall-cmd &lt;span class=&quot;nt&quot;&gt;--add-service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;freeipa-ldap &lt;span class=&quot;nt&quot;&gt;--add-service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;freeipa-ldaps &lt;span class=&quot;nt&quot;&gt;--add-service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;dns
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;firewall-cmd &lt;span class=&quot;nt&quot;&gt;--add-service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;freeipa-ldap &lt;span class=&quot;nt&quot;&gt;--add-service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;freeipa-ldaps &lt;span class=&quot;nt&quot;&gt;--add-service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;dns &lt;span class=&quot;nt&quot;&gt;--permanent&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Run the FreeIPA server installer. Be sure to add the mkhomedir option, as this will create a folder in /home for a user logging in for the first time. If you ommit this option, then things may not run properly for logged in users.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ipa-server-install &lt;span class=&quot;nt&quot;&gt;--mkhomedir&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Next you will be prompted for some information. You can specify all this on the command line but I like to answer it interactively. I say yes to install the integrated DNS server. The script detects the hostname and domain name automatically and I will be using IPA.RICOSHARP.COM as the realm name. Enter a password for the admin and Directory Manager accounts when prompted.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;The log file &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;this installation can be found &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; /var/log/ipaserver-install.log
&lt;span class=&quot;o&quot;&gt;==============================================================================&lt;/span&gt;
This program will &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;up the IPA Server.
Version 4.9.2

This includes:
  &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Configure a stand-alone CA &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;dogtag&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;certificate management
  &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Configure the NTP client &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;chronyd&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Create and configure an instance of Directory Server
  &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Create and configure a Kerberos Key Distribution Center &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;KDC&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Configure Apache &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;httpd&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Configure the KDC to &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;PKINIT

To accept the default shown &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;brackets, press the Enter key.

Do you want to configure integrated DNS &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;BIND&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;? &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;no]: &lt;span class=&quot;nb&quot;&gt;yes

&lt;/span&gt;Enter the fully qualified domain name of the computer
on which you&lt;span class=&quot;s1&quot;&gt;'re setting up server software. Using the form
&amp;lt;hostname&amp;gt;.&amp;lt;domainname&amp;gt;
Example: master.example.com.


Server host name [ipa01.ipa.ricosharp.com]: 

Warning: skipping DNS resolution of host ipa01.ipa.ricosharp.com
The domain name has been determined based on the host name.

Please confirm the domain name [ipa.ricosharp.com]: 

The kerberos protocol requires a Realm name to be defined.
This is typically the domain name converted to uppercase.

Please provide a realm name [IPA.RICOSHARP.COM]: 
Certain directory server operations require an administrative user.
This user is referred to as the Directory Manager and has full access
to the Directory for system management tasks and will be added to the
instance of directory server created for IPA.
The password must be at least 8 characters long.

Directory Manager password: 
Password (confirm): 

The IPA server requires an administrative user, named '&lt;/span&gt;admin&lt;span class=&quot;s1&quot;&gt;'.
This user is a regular system account used for IPA server administration.

IPA admin password: 
Password (confirm): 

Checking DNS domain ipa.ricosharp.com., please wait ...
Do you want to configure DNS forwarders? [yes]: 
The following DNS servers are configured in systemd-resolved: 192.168.1.7
Do you want to configure these servers as DNS forwarders? [yes]: 
All detected DNS servers were added. You can enter additional addresses now:
Enter an IP address for a DNS forwarder, or press Enter to skip: 
DNS forwarders: 192.168.1.7
Checking DNS forwarders, please wait ...
Do you want to search for missing reverse zones? [yes]: 
Reverse record for IP address 192.168.122.2 already exists
Do you want to configure chrony with NTP server or pool address? [no]: 

The IPA Master Server will be configured with:
Hostname:       ipa01.ipa.ricosharp.com
IP address(es): 192.168.122.2
Domain name:    ipa.ricosharp.com
Realm name:     IPA.RICOSHARP.COM

The CA will be configured with:
Subject DN:   CN=Certificate Authority,O=IPA.RICOSHARP.COM
Subject base: O=IPA.RICOSHARP.COM
Chaining:     self-signed

BIND DNS server will be configured to serve IPA domain with:
Forwarders:       192.168.1.7
Forward policy:   only
Reverse zone(s):  No reverse zone

Continue to configure the system with these values? [no]: yes

...
...
...
...

Setup complete

Next steps:
	1. You must make sure these network ports are open:
		TCP Ports:
		  * 80, 443: HTTP/HTTPS
		  * 389, 636: LDAP/LDAPS
		  * 88, 464: kerberos
		  * 53: bind
		UDP Ports:
		  * 88, 464: kerberos
		  * 53: bind
		  * 123: ntp

	2. You can now obtain a kerberos ticket using the command: '&lt;/span&gt;kinit admin&lt;span class=&quot;s1&quot;&gt;'
	   This ticket will allow you to use the IPA tools (e.g., ipa user-add)
	   and the web user interface.

Be sure to back up the CA certificates stored in /root/cacert.p12
These files are required to create replicas. The password for these
files is the Directory Manager password
The ipa-server-install command was successful&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Next I will change the DNS of the FreeIPA server to itself:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nmcli con mod enp1s0 ipv4.dns 192.168.122.2&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I also like to change a few default settings such as the default shell and removing the default email domain:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;kinit admin
ipa config-mod &lt;span class=&quot;nt&quot;&gt;--defaultshell&lt;/span&gt; /bin/bash
ipa config-mod &lt;span class=&quot;nt&quot;&gt;--emaildomain&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now create a test user:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;kinit admin
&lt;span class=&quot;c&quot;&gt;# Interactively:&lt;/span&gt;
ipa user-add &lt;span class=&quot;nt&quot;&gt;--password&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Single Command (other options can be found by runing ipa user-add --help)&lt;/span&gt;
ipa user-add &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--first&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--last&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--password&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Thankfully all the above can also be done easily in the web interface. In my case it is here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ipa01.ipa.ricosharp.com&quot;&gt;https://ipa01.ipa.ricosharp.com&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;client-pc&quot;&gt;Client PC&lt;/h1&gt;

&lt;p&gt;I’ll setup DHCP later but for now the client PC is running with these static network settings. The DNS server is our FreeIPA server which helps the client discover information when running the client installation.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;IP Address&lt;/th&gt;
      &lt;th&gt;Gateway&lt;/th&gt;
      &lt;th&gt;DNS Server&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;192.168.122.100/24&lt;/td&gt;
      &lt;td&gt;192.168.122.1&lt;/td&gt;
      &lt;td&gt;192.168.122.2&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Now on a client PC, install freeipa-client&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;dnf &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;freeipa-client &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Run the FreeIPA client installer. If your DNS is setup correctly everything wil be found and you will only need to enter the admin username/password when prompted. Don’t forget to add the mkhomedir option. I also like to add the enable-dns-updates option so the client’s DNS entries update on the server when an IP address changes.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ipa-client-install &lt;span class=&quot;nt&quot;&gt;--mkhomedir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--enable-dns-updates&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now reboot the client PC and try logging in with the test account.&lt;/p&gt;</content><author><name>Rico Sharp</name><email>rico.sharp@gmail.com</email></author><summary type="html">How to setup a centralized authentication server with FreeIPA</summary></entry><entry><title type="html">How to route traffic from a single IP over a VPN with Ubiquiti EdgeRouter</title><link href="http://localhost:4000/posts/2020/How-to-route-traffic-from-a-single-IP-over-a-VPN-with-Ubiquiti-EdgeRouter" rel="alternate" type="text/html" title="How to route traffic from a single IP over a VPN with Ubiquiti EdgeRouter" /><published>2020-07-19T00:00:00-04:00</published><updated>2020-07-19T00:00:00-04:00</updated><id>http://localhost:4000/posts/2020/How-to-route-traffic-from-a-single-IP-over-a-VPN-with-Ubiquiti-EdgeRouter</id><content type="html" xml:base="http://localhost:4000/posts/2020/How-to-route-traffic-from-a-single-IP-over-a-VPN-with-Ubiquiti-EdgeRouter">&lt;p&gt;This post will show you how to route all traffic from a particular IP address over a PPTP VPN using a Ubiqitui EdgeRouter. I wanted to do this with a host on my network that pulls video streams which would otherwise be geo-blocked using my public ip address. The below configuration is more specific to my lab environment but can be tweaked to be used in any situation. It can also be changed to allow for an entire subnet to be tunneled over the VPN.&lt;/p&gt;

&lt;p&gt;In this example I am using an EdgeRouter PoE 5 port router. The configuration will be quite similar across any EdgeRouter product.&lt;/p&gt;

&lt;p&gt;First SSH into your EdgeRouter and configure the VPN client interface. Here I am using PPTP as the VPN protocol. It is widely documented as an insecure protocol but will work fine for the purpose of “faking” my IP address.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;configure
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;interfaces pptp-client pptpc0
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;interfaces pptp-client pptpc0 description &amp;lt;Enter Some Description Here e.g. VPN to &amp;lt;Country&amp;gt;&amp;gt;
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;interfaces pptp-client pptpc0 server-ip &amp;lt;Hostname or Server IP of VPN&amp;gt;
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;interfaces pptp-client pptpc0 user-id &amp;lt;VPN Username&amp;gt;
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;interfaces pptp-client pptpc0 password &amp;lt;VPN Password&amp;gt;
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;interfaces pptp-client pptpc0 require-mppe
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;interfaces pptp-client pptpc0 default-route none&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Save the configuration and check to see if your VPN connects. You can do this by looking in the routing table to see if it is connected.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;commit&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;save
&lt;span class=&quot;nb&quot;&gt;exit
&lt;/span&gt;show ip route&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Next, create another routing table which will be used when incoming traffic matches the IP we want sent across the VPN.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;protocols static table 1 interface-route 0.0.0.0/0 next-hop-interface pptpc0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now for the following rules, be careful not to overwrite any existing ones in your own configuration. The rule numbers below are specific to my environment.&lt;/p&gt;

&lt;p&gt;Here I am setting a wifi and server network to use the main routing table (rules 10 and 20). This rule does not route over the VPN.&lt;/p&gt;

&lt;p&gt;Rule 30 defines the host IP that I want to route over the VPN and sets it to use the routing table that was created above. Basically it is saying if the source address is 10.13.12.1, use table 1 which routes all traffic over pptpc0 (the VPN interface).&lt;/p&gt;

&lt;p&gt;Rule 5011 then applies some NAT to traffic going out of the pptpc0 interface before we finally apply the rules to anything that comes in the switch0 interface.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;firewall group network-group servers network 10.24.5.0/24
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;firewall group network-group wifi network 10.17.9.0/24
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;firewall modify PBR rule 10 destination group network-group servers
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;firewall modify PBR rule 20 destination group network-group wifi
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;firewall modify PBR rule 10 modify table main
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;firewall modify PBR rule 20 modify table main

&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;firewall modify PBR rule 30 &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;address 10.13.12.1
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;firewall modify PBR rule 30 modify table 1

&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;service nat rule 5011 outbound-interface pptpc0
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;service nat rule 5011 &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;masquerade
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;service nat rule 5011 description &lt;span class=&quot;s2&quot;&gt;&quot;masquerade for VPN&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;interfaces switch switch0 firewall &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;modify PBR&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You can then verify IP addresses coming.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;curl http://icanhazip.com&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>Rico Sharp</name><email>rico.sharp@gmail.com</email></author><summary type="html">How to route all traffic from a single IP over a PPTP-VPN with Ubiqitui EdgeRouter</summary></entry><entry><title type="html">Headless KVM Host with CentOS and virt-manager</title><link href="http://localhost:4000/posts/2019/Headless-KVM-Host-with-CentOS-and-virt-manager" rel="alternate" type="text/html" title="Headless KVM Host with CentOS and virt-manager" /><published>2019-09-16T00:00:00-04:00</published><updated>2019-09-16T00:00:00-04:00</updated><id>http://localhost:4000/posts/2019/Headless-KVM-Host-with-CentOS-and-virt-manager</id><content type="html" xml:base="http://localhost:4000/posts/2019/Headless-KVM-Host-with-CentOS-and-virt-manager">&lt;p&gt;I’m currently running &lt;a href=&quot;https://www.linux-kvm.org/page/Main_Page&quot;&gt;KVM&lt;/a&gt; on a single remote host. I have a bunch of virtual machines running services like DHCP/DNS, UniFi Controller and UniFi video.&lt;/p&gt;

&lt;p&gt;When I intially set this up I wanted to keep the virtual host installation as minimal as possible. So off I went and did a minimal installation of CentOS 7, thinking I could remotely manage this server through File &amp;gt; Add Connection on my local Linux machine with virt-manager. Of course this was not as straightforward as I thought, so during my search for an answer I came across a suggestion to use SSH with X forwarding.&lt;/p&gt;

&lt;p&gt;Below is a guide on setting up a KVM host with virt-manager that can be remotely managed through SSH with X forwarding.&lt;/p&gt;

&lt;p&gt;I’m going to be using a CentOS 7 minimal installation that is fully patched.&lt;/p&gt;

&lt;p&gt;To begin, install the virtualization host software.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# yum group &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Virtualization Host&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Start the libvirtd service and verify it is enabled on startup.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# systemctl start libvirtd
~]# systemctl is-enabled libvirtd&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Install X Window System.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# yum &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;@X Window System&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Install virt-manager.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# yum &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; virt-manager&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The host setup is now complete. Now all we need to do is connect to the host through SSH with X Forwarding.&lt;/p&gt;

&lt;h2 id=&quot;connecting-with-linux&quot;&gt;Connecting with Linux&lt;/h2&gt;
&lt;p&gt;Open a terminal and SSH to the KVM host. Once connected open virt-manager.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; rico@192.168.122.100
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;su
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;virt-manager&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;connecting-with-a-mac&quot;&gt;Connecting with a Mac.&lt;/h2&gt;
&lt;p&gt;Download and install &lt;a href=&quot;https://www.xquartz.org/&quot;&gt;XQuartz&lt;/a&gt;
Open a terminal and SSH to the KVM host. Once connected open virt-manager.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; rico@192.168.122.100
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;su
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;virt-manager&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;connecting-with-a-windows-system&quot;&gt;Connecting with a Windows System&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Download, install, then open &lt;a href=&quot;https://sourceforge.net/projects/xming/&quot;&gt;xming&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Download and open putty&lt;/li&gt;
  &lt;li&gt;Go to Connection &amp;gt; SSH &amp;gt; X11 and check Enable X11 forwarding&lt;/li&gt;
  &lt;li&gt;Go back to Session and enter the IP/Hostname of your machine and click Open&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;using-virt-manager-as-a-non-root-user&quot;&gt;Using virt-manager as a non-root user&lt;/h2&gt;

&lt;p&gt;In the SSH examples above, I am SSH’ing as a non-root user, then changing to root to run virt-manager. This is because polkit blocks user accounts from accessing libvirtd.&lt;/p&gt;

&lt;p&gt;To work around this and allow non-root users who are part of the wheel group access to run virt-manager, create this rule:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# vi /etc/polkit-1/rules.d/51-libvirt.rules

/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Allow &lt;span class=&quot;nb&quot;&gt;users &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;wheel group to manage the libvirt
daemon without authentication &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/
polkit.addRule&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;action, subject&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;action.id &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;org.libvirt.unix.manage&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
        subject.isInGroup&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wheel&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;polkit.Result.YES&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://wiki.archlinux.org/index.php/Libvirt#Using_polkit&quot;&gt;https://wiki.archlinux.org/index.php/Libvirt#Using_polkit&lt;/a&gt;&lt;/p&gt;</content><author><name>Rico Sharp</name><email>rico.sharp@gmail.com</email></author><summary type="html">Installing and managing a KVM virtualization host remotely with virt-manager</summary></entry><entry><title type="html">Raspberry Pi Network Configuration</title><link href="http://localhost:4000/posts/2019/Raspberry-Pi-Network-Configuration" rel="alternate" type="text/html" title="Raspberry Pi Network Configuration" /><published>2019-09-15T00:00:00-04:00</published><updated>2019-09-15T00:00:00-04:00</updated><id>http://localhost:4000/posts/2019/Raspberry-Pi-Network-Configuration</id><content type="html" xml:base="http://localhost:4000/posts/2019/Raspberry-Pi-Network-Configuration">&lt;h2 id=&quot;join-a-wifi-network&quot;&gt;Join a wifi network&lt;/h2&gt;
&lt;p&gt;Configure settings to join a network:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/wpa_supplicant/wpa_supplicant.conf
&lt;span class=&quot;c&quot;&gt;# Add these lines to the config file with the appropriate values:&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;network&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;={&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;ssid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Network_Name&quot;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;psk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Network_Password&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Apply the settings:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wpa_cli &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; wlan0 reconfigure&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;setting-a-static-ip-address&quot;&gt;Setting a static IP address&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/dhcpcd.conf
interface eth0
static &lt;span class=&quot;nv&quot;&gt;ip_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;192.168.1.100/24
static &lt;span class=&quot;nv&quot;&gt;routers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;192.168.0.1
static &lt;span class=&quot;nv&quot;&gt;domain_name_servers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;192.168.1.1&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>Rico Sharp</name><email>rico.sharp@gmail.com</email></author><summary type="html">How to configure various network settings on a Raspberry Pi</summary></entry><entry><title type="html">Converting ova to qcow2</title><link href="http://localhost:4000/posts/2019/Converting-ova-file-to-qcow2" rel="alternate" type="text/html" title="Converting ova to qcow2" /><published>2019-09-03T00:00:00-04:00</published><updated>2019-09-03T00:00:00-04:00</updated><id>http://localhost:4000/posts/2019/Converting-ova-file-to-qcow2</id><content type="html" xml:base="http://localhost:4000/posts/2019/Converting-ova-file-to-qcow2">&lt;p&gt;There is no native way (that I know of anyway) to simply import an ova file directly into KVM. An ova file is basically an archive file that contains virtual machine information. We can extract the files from this archive and convert the vmdk disks into qcow2 format and import into KVM.&lt;/p&gt;

&lt;p&gt;In this example I’m using the librenms virtual machine that can be downloaded &lt;a href=&quot;https://www.librenms.org/&quot;&gt;here&lt;/a&gt;. LibreNMS is an open source network monitoring system and is worth checking out.&lt;/p&gt;

&lt;p&gt;First extract the files from the ova file.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;tar&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-xvf&lt;/span&gt; librenms-centos-7.6-x86_64.ova&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The virtual disk extracted should be fairly obvious. It’s the vmdk file called librenms-centos-7.6-x86_64-disk001.vmdk. All we need to do now is convert the vmdk file to qcow2 using qemu-img.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;qemu-img convert librenms-centos-7.6-x86_64-disk001.vmdk librenms-centos-7.6-x86_64-disk001.qcow2 &lt;span class=&quot;nt&quot;&gt;-O&lt;/span&gt; qcow2&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You can verify the new format with the file command.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;file librenms-centos-7.6-x86_64-disk001.qcow2
librenms-centos-7.6-x86_64-disk001.qcow2: QEMU QCOW Image &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;v3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, 42949672960 bytes&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now the real test. Import the qcow2 file into KVM. First I will move the file into /var/lib/libvirt/images.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo mv &lt;/span&gt;librenms-centos-7.6-x86_64-disk001.qcow2 /var/lib/libvirt/images&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I use virt-manager to manage my virtual machines. Create a new VM and select Import existing disk image. Select the qcow2 file and follow the rest of the prompts. The machine will start using the newly converted qcow2 disk image.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/kvm-import-disk.png&quot; alt=&quot;KVM Import Disk&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.librenms.org/&quot;&gt;LibreNMS&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://edoceo.com/notabene/ova-to-vmdk-to-qcow2&quot;&gt;Converting OVA for use with KVM / QCOW2&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Rico Sharp</name><email>rico.sharp@gmail.com</email></author><summary type="html">How to convert an ova file to qcow2 for use with a KVM hypervisor</summary></entry><entry><title type="html">Up and running with Apache Guacamole on CentOS 7</title><link href="http://localhost:4000/posts/2019/Up-and-running-with-Apache-Guacamole-on-Centos7" rel="alternate" type="text/html" title="Up and running with Apache Guacamole on CentOS 7" /><published>2019-09-02T00:00:00-04:00</published><updated>2019-09-02T00:00:00-04:00</updated><id>http://localhost:4000/posts/2019/Up-and-running-with-Apache-Guacamole-on-Centos7</id><content type="html" xml:base="http://localhost:4000/posts/2019/Up-and-running-with-Apache-Guacamole-on-Centos7">&lt;p&gt;Apache Guacamole is an open source, clientless remote access gateway. It can be used to establish remote sessions over various protocols through a web browser. Below I will set up Apache Guacamole with authentication against Active Directory (AD) through Lightweight Directory Access Protocol (LDAP).&lt;/p&gt;

&lt;p&gt;After this I will configure a Windows 10 Pro machine in two ways; Remote Desktop Protocol (RDP) and RemoteApp. The difference between the two is RDP offers a full desktop whereas RemoteApp will present a single application.&lt;/p&gt;

&lt;p&gt;In this article I will continue to use the AD environment from my &lt;a href=&quot;https://blog.ricosharp.com/posts/2019/Samba-4-Active-Directory-Domain-Controller-on-Ubuntu-18-04-Server&quot;&gt;Samba 4 Active Directory Domain Controller on Ubuntu 18.04 Server
&lt;/a&gt; post.&lt;/p&gt;

&lt;p&gt;The Apache Guacamole machine I will be using is a minimal installation of Centos 7 with an IP address of 192.168.122.75 and hostname of guacamole.&lt;/p&gt;

&lt;h2 id=&quot;add-dns-entry-for-guacamole-machine&quot;&gt;Add DNS entry for Guacamole machine&lt;/h2&gt;
&lt;p&gt;On DC1, the domain controller, add a DNS record for the Apache Guacamole machine.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;samba-tool dns add 192.168.122.70 ad.ricosharp.com guacamole A 192.168.122.75&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Make sure your Unix user has an account in AD so you can authenticate. The account I am using has been added as a Domain Administrator&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you skip this step, you can just access the Guacamole machine through its IP address.&lt;/p&gt;

&lt;h2 id=&quot;trusted-certificates-for-ldap&quot;&gt;Trusted Certificates for LDAP&lt;/h2&gt;

&lt;p&gt;You will need the public certificate of your domain controller (DC1) since we will be using LDAPS. Samba creates a self signed certificate when provisioning a domain controller in /var/lib/samba/private/tls called ca.pem. This will need to be copied to the CentOS 7 server. Here I also add it as a trusted certificate on the guacamole machine and test that it works.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DC1&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;scp /var/lib/samba/private/tls/ca.pem root@guacamole.ad.ricosharp.com:/etc/pki/ca-trust/source/anchors/ca.pem&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;GUACAMOLE&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# update-ca-trust extract
~]# openssl s_client &lt;span class=&quot;nt&quot;&gt;-connect&lt;/span&gt; dc1.ad.ricosharp.com:636&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The result will say ok. If you get a message saying unable to verify then the certificate has not been added properly.&lt;/p&gt;

&lt;p&gt;Next you will need to create an LDAP bind user in AD. I just create a standard user called ldapbind through Active Directory Users and Computers.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/ad-ldap-bind-user.png&quot; alt=&quot;AD LDAP Bind User&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GUACAMOLE&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now, test that you can actually connect to AD with LDAPS. You will be prompted for the ldapbind user’s password and&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# yum &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;openldap-clients &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;
~]# ldapsearch &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; ldaps://dc1.ad.ricosharp.com:636 &lt;span class=&quot;nt&quot;&gt;-D&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;CN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ldapbind,CN&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Users,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ad,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ricosharp,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;com &lt;span class=&quot;nt&quot;&gt;-W&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;DC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ad,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ricosharp,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;com&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If sucessful, the query will return some AD information. You should The machine is now ready to have Apache Guacamole installed.&lt;/p&gt;

&lt;h2 id=&quot;guacamole-installation&quot;&gt;Guacamole Installation&lt;/h2&gt;
&lt;p&gt;The easiest way to get up and running is to use a script, like this one &lt;a href=&quot;https://github.com/Zer0CoolX/guacamole-install-rhel/blob/master/guac-install.sh&quot;&gt;here&lt;/a&gt; by &lt;a href=&quot;https://github.com/Zer0CoolX&quot;&gt;Zer0CoolX&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Download the script, give it execute permissions, and run it.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# yum &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;wget &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;
~]# wget https://raw.githubusercontent.com/Zer0CoolX/guacamole-install-rhel/master/guac-install.sh
~]# &lt;span class=&quot;nb&quot;&gt;chmod&lt;/span&gt; +x guac-install.sh
~]# ./guac-install.sh&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Follow the prompts to install. Below are the main settings to specify:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Self-signed certificate&lt;/li&gt;
  &lt;li&gt;Hostname - guacamole&lt;/li&gt;
  &lt;li&gt;LDAP(S)&lt;/li&gt;
  &lt;li&gt;yes to LDAPS&lt;/li&gt;
  &lt;li&gt;Certificate filename: ca.pem&lt;/li&gt;
  &lt;li&gt;Certificate path: /etc/pki/ca-trust/source/anchors/&lt;/li&gt;
  &lt;li&gt;LDAP Server Hostname: ad.ricosharp.com&lt;/li&gt;
  &lt;li&gt;LDAP User Base DN: DC=ad,DC=ricosharp,DC=com&lt;/li&gt;
  &lt;li&gt;LDAP Search Bind DN: CN=ldapbind,CN=Users,DC=ad,DC=ricosharp,DC=com&lt;/li&gt;
  &lt;li&gt;No 2FA&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Select option 8 to begin installation. The script recommends a reboot once installation completes.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# reboot&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;After rebooting, you can access the web front end through either the hostname or IP address in a web browser.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/guacamole-ui.png&quot; alt=&quot;Guacamole UI&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The default administrator username/password is guacadmin/guacadmin.&lt;/p&gt;

&lt;h2 id=&quot;linking-ad-accounts&quot;&gt;Linking AD Accounts&lt;/h2&gt;

&lt;p&gt;The default guacadmin user can only access users stored in the local database. You need to add an AD user in order view and grant AD accounts access to remote sessions.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Log in to web interface using the default username/password&lt;/li&gt;
  &lt;li&gt;Click guacadmin at the top right hand corner of the page and select Settings&lt;/li&gt;
  &lt;li&gt;Click the Users tab&lt;/li&gt;
  &lt;li&gt;Select New User&lt;/li&gt;
  &lt;li&gt;Enter an AD username/password. This can be a standard user account in AD&lt;/li&gt;
  &lt;li&gt;Check all the permissions options to make this user an administrator&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Log out and log back in under the AD account. You will now be able to see AD accounts under Settings &amp;gt; Users.&lt;/p&gt;

&lt;h2 id=&quot;windows-10-remote-desktop-protocol&quot;&gt;Windows 10 Remote Desktop Protocol&lt;/h2&gt;

&lt;p&gt;The Windows 10 Pro machine I am using is connected to AD with an IP address of 192.168.122.90 obtained through DHCP.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Windows 10 Machine&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;First, configure the Window 10 computer to allow RDP.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Open File Explorer&lt;/li&gt;
  &lt;li&gt;Right click This PC &amp;gt; Properties&lt;/li&gt;
  &lt;li&gt;Click Remote Settings&lt;/li&gt;
  &lt;li&gt;Click Allow remote connections to this computer and click Select Users&lt;/li&gt;
  &lt;li&gt;Add Domain Users to this list
&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/rdp-setup.png&quot; alt=&quot;RDP Setup&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Guacamole UI&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Next we need to add the machine to guacamole. Log into the guacamole UI and the administrator account that has access to AD users.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Click the username at the top right corner of the page &amp;gt; Settings&lt;/li&gt;
  &lt;li&gt;Click the Connections tab&lt;/li&gt;
  &lt;li&gt;Click New Connection&lt;/li&gt;
  &lt;li&gt;Give the connection a name and select RDP as the protocol&lt;/li&gt;
  &lt;li&gt;In the Network section under Parameters, enter either the hostname or IP and RDP port (default 3389)&lt;/li&gt;
  &lt;li&gt;Under Authentication use ${GUAC_USERNAME} as the username and ${GUAC_PASSWORD} as the password.&lt;/li&gt;
  &lt;li&gt;Enter the domain name and security mode&lt;/li&gt;
  &lt;li&gt;Select Ignore server certificate&lt;/li&gt;
  &lt;li&gt;Scroll to the bottom of the page and click Save&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/rdp-parameters.png&quot; alt=&quot;RDP Parameters&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A couple of points to make about the configuration above. Step 6 takes the credentials of the current logged  in user (${GUAC_USERNAME} and ${GUAC_PASSWORD})and passes it through to the Windows 10 RDP session for log in. So if johndoe logs into the guacamole UI and can see the Windows 10 machine advertised, it will log into that RDP session with his johndoe AD credentials.&lt;/p&gt;

&lt;p&gt;At step 8 we selected to ignore server certificates, as I do not have certificates set up. When connecting to an RDP session using the Windows RDP client, you will be prompted with a message saying the certificate is not trusted. Apache Guacamole does not do this and will fail to connect instead. Checking Ignore server certificate bypasses this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advertise RDP Connection&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now you need to actually advertise this connection to the users who should have access. To keep this simple, I’m going to advertise to a single user. Using the AD Administrator account within the guacamole UI, do the following.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Click the username at the top right corner of the page &amp;gt; Settings&lt;/li&gt;
  &lt;li&gt;Click the Users tab&lt;/li&gt;
  &lt;li&gt;Select the User who you want to advertise the RDP session to&lt;/li&gt;
  &lt;li&gt;Under Connections, click All Connections and check the box of the RDP session that was created&lt;/li&gt;
  &lt;li&gt;Click Save&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can now log out and log back in as this user and an RDP session will start automatically.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note that on a standard Windows computer, RDP is only limited to one logged in user at a time.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/guac-rdp-session.png&quot; alt=&quot;Guacamole RDP Session&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;remoteapps&quot;&gt;RemoteApps&lt;/h2&gt;
&lt;p&gt;RemoteApps is a great way of running a single application through an RDP session. The application is the only window that will show. There will be no start menu or desktop, just the application.&lt;/p&gt;

&lt;p&gt;In order to use RemoteApps under Windows 10 Pro, you need to make a slight change in the registry. On the machine that the RemoteApp will be running:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Open the registry through Start &amp;gt; Run &amp;gt; regedit&lt;/li&gt;
  &lt;li&gt;Navigate to HKEY_LOCAL_MACHINE\SOFTWARE\Microsot\Windows NT\CurrentVersion\Terminal Server\TSAppAllowList&lt;/li&gt;
  &lt;li&gt;Select fDisabledAllowList and change the value from 0 to 1&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/remoteapp-registry.png&quot; alt=&quot;RemoteApp Registry&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now advertise the RemoteApp as a new connection in guacamole. Here I will be advertising notepad using the same Windows 10 machine above:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Log in as the AD Administrator account within the guacamole UI&lt;/li&gt;
  &lt;li&gt;Click the username at the top right corner of the page &amp;gt; Settings&lt;/li&gt;
  &lt;li&gt;Select the Connection tab and choose New Connection&lt;/li&gt;
  &lt;li&gt;Give the connection a name and make sure you select RDP as the protocol&lt;/li&gt;
  &lt;li&gt;In the Network section under Parameters, enter either the hostname or IP and RDP port (default 3389)&lt;/li&gt;
  &lt;li&gt;Under Authentication use ${GUAC_USERNAME} as the username and ${GUAC_PASSWORD} as the password.&lt;/li&gt;
  &lt;li&gt;Enter the domain name and security mode&lt;/li&gt;
  &lt;li&gt;Select Ignore server certificate&lt;/li&gt;
  &lt;li&gt;In the RemoteApp section enter the path of notepad (C:\Windows\system32\notepad.exe) in the Program textbox&lt;/li&gt;
  &lt;li&gt;Scroll to the bottom of the page and click Save&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/rdp-remoteapp.png&quot; alt=&quot;RDP RemoteApp&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advertise RemoteApp&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As with the RDP session above, you need to advertise the RemoteApp RDP session&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Log in as the AD Administrator account within the guacamole UI&lt;/li&gt;
  &lt;li&gt;Click the username at the top right corner of the page &amp;gt; Settings&lt;/li&gt;
  &lt;li&gt;Click the Users tab&lt;/li&gt;
  &lt;li&gt;Select the User who you want to advertise the RemoteApp RDP session to&lt;/li&gt;
  &lt;li&gt;Under Connections, click All Connections and check the box of the RemoteApp RDP session just created&lt;/li&gt;
  &lt;li&gt;Click Save&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now log in under the user the RemoteApp was advertised to and notepad will start automatically.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/remoteapp-notepad.png&quot; alt=&quot;RemoteApp Notepad&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/Zer0CoolX/guacamole-install-rhel&quot;&gt;Apache Guacamole install script for RHEL 7/CentOS 7&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.sbsfaq.com/the-following-remoteapp-program-is-not-in-the-list-of-authorized-programs-on-windows-essential-server/&quot;&gt;The following RemoteApp program is not in the list of authorized programs on Windows Essential Server&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://serverfault.com/questions/965941/guacamole-apache-ldap-assignment&quot;&gt;Guacamole Apache LDAP Assignment&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://access.redhat.com/solutions/1519813&quot;&gt;How to install a CA certificate on Red Hat Enterprise Linux 6 / 7&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Rico Sharp</name><email>rico.sharp@gmail.com</email></author><summary type="html">How to setup a clientless remote access gateway using CentOS 7 and Apache Guacamole with AD authentication, Windows RDP, and Remote Apps</summary></entry><entry><title type="html">How to configure a static IP address with netplan on Ubuntu 18.04 Server</title><link href="http://localhost:4000/posts/2019/How-to-configure-a-static-ip-address-with-netplan-on-Ubuntu-18-04-Server" rel="alternate" type="text/html" title="How to configure a static IP address with netplan on Ubuntu 18.04 Server" /><published>2019-08-25T00:00:00-04:00</published><updated>2019-08-25T00:00:00-04:00</updated><id>http://localhost:4000/posts/2019/How-to-configure-a-static-ip-address-with-netplan-on-Ubuntu-18-04-Server</id><content type="html" xml:base="http://localhost:4000/posts/2019/How-to-configure-a-static-ip-address-with-netplan-on-Ubuntu-18-04-Server">&lt;p&gt;I’ve only just begun using Ubuntu 18.04 server and one of the very first things I noticed was that network configuration is now done using netplan. I’m so used to doing the following:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/network/interfaces
auto ens3
iface ens3 inet static
    address 192.168.122.100
    netmask 255.255.255.0
    gateway 192.168.122.1
    dns-nameservers 8.8.8.8
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl restart networking&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To my surprise a message in /etc/network/interfaces says that ifupdown has been replaced by netplan. It turns out that although it’s a new way of configuring network settings, it isn’t all that hard.&lt;/p&gt;

&lt;p&gt;First, issue these commands:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo rm&lt;/span&gt; /etc/netplan/50-cloud-init.yaml
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg
&lt;span class=&quot;c&quot;&gt;#Add this line:&lt;/span&gt;
network: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;config: disabled&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;All the above commands do are disable cloud-init’s network configuration capabilities. If you reboot with the above configuration, you will have no network. To set a static IP address, create a new YAML file with the following:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/netplan/ens3.yaml
&lt;span class=&quot;c&quot;&gt;# Indents must be spaces when using YAML, not tabs.&lt;/span&gt;
network:
    version: 2
    ethernets:
        ens3:
            dhcp4: no
            addresses: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;192.168.122.100/24]
            gateway4: 192.168.122.1
            nameservers:
                addresses: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;8.8.8.8]&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now check the settings are ok in this file:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;netplan try&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If everything is ok you have the option to immediately apply the settings by pressing Enter.&lt;/p&gt;

&lt;p&gt;If you want to use a dynamic IP address instead, all you need to change in the above configuration is dhcp4: yes, then remove everything below it:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/netplan/ens3.yaml
&lt;span class=&quot;c&quot;&gt;# Indents must be spaces when using YAML, not tabs.&lt;/span&gt;
network:
    version: 2
    ethernets:
        ens3:
            dhcp4: no            &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Again, check the settings are ok, then press Enter.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;netplan try&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://netplan.io/examples&quot;&gt;Netplan Examples&lt;/a&gt;&lt;/p&gt;</content><author><name>Rico Sharp</name><email>rico.sharp@gmail.com</email></author><summary type="html">This post will show you how to configure a static IP address with netplan on Ubuntu 18.04 Server</summary></entry><entry><title type="html">Samba 4 Active Directory Domain Controller on Ubuntu 18.04 Server</title><link href="http://localhost:4000/posts/2019/Samba-4-Active-Directory-Domain-Controller-on-Ubuntu-18-04-Server" rel="alternate" type="text/html" title="Samba 4 Active Directory Domain Controller on Ubuntu 18.04 Server" /><published>2019-08-24T00:00:00-04:00</published><updated>2019-08-24T00:00:00-04:00</updated><id>http://localhost:4000/posts/2019/Samba-4-Active-Directory-Domain-Controller-on-Ubuntu-18-04-Server</id><content type="html" xml:base="http://localhost:4000/posts/2019/Samba-4-Active-Directory-Domain-Controller-on-Ubuntu-18-04-Server">&lt;p&gt;This post will outline how to install an Active Directory(AD) Domain Controller on Ubuntu Server 18.04. Yes, that’s right…Active Directory on a linux host. Not a backup domain controller but a functional AD that you can create users with, join computers to, and set up group policy.&lt;/p&gt;

&lt;h2 id=&quot;network-configuration&quot;&gt;Network configuration&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Hostname&lt;/th&gt;
      &lt;th&gt;Domain&lt;/th&gt;
      &lt;th&gt;IP Address&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;dc1&lt;/td&gt;
      &lt;td&gt;ad.ricosharp.com&lt;/td&gt;
      &lt;td&gt;192.168.122.70&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;configure-networking&quot;&gt;Configure networking&lt;/h2&gt;
&lt;p&gt;Configure system hostname&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;hostnamectl set-hostname dc1&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Edit the hosts files so the hostname resolves to its IP address&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/hosts
&lt;span class=&quot;c&quot;&gt;# Add this line to /etc/hosts so that dc1 resolves to 192.168.122.70&lt;/span&gt;
192.168.122.70  dc1 dc1.ad.ricosharp.com&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Note that Ubuntu 18.04 is now using netplan to configure IP addresses on systems. I will outline a basic configuration in a future post&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;update-system-and-install-required-packages&quot;&gt;Update system and install required packages&lt;/h2&gt;

&lt;p&gt;Update and reboot the system&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt update &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt upgrade &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;reboot&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Install relevant samba, winbind, and kerberos packages. The installation will prompt for kerberos settings and will give an error at the end of installation. Ignore this for now and accept the defaults. This will be configured properly later as part of the AD installation.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;samba smbclient winbind libpam-winbind libnss-winbind krb5-kdc libpam-krb5 &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Rename samba and kerberos files. You need to start from a clean environment when starting the samba AD setup.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo mv&lt;/span&gt; /etc/samba/smb.conf /etc/samba/smb.conf.orig
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo mv&lt;/span&gt; /etc/krb5.conf /etc/krb5.conf.orig&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;run-the-samba-ad-setup&quot;&gt;Run the samba AD setup&lt;/h2&gt;

&lt;p&gt;All the default settings are fine. The only change I make is to set the DNS forwarder to 8.8.8.8. You can also use a different DNS backend. But this is out of the scope of this post for a simple setup.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;samba-tool domain provision &lt;span class=&quot;nt&quot;&gt;--use-rfc2307&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--interactive&lt;/span&gt;
Realm &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;AD.RICOSHARP.COM]: 
 Domain &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;AD]: 
 Server Role &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;dc, member, standalone&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;dc]: 
 DNS backend &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;SAMBA_INTERNAL, BIND9_FLATFILE, BIND9_DLZ, NONE&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;SAMBA_INTERNAL]: 
 DNS forwarder IP address &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;write &lt;span class=&quot;s1&quot;&gt;'none'&lt;/span&gt; to disable forwarding&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;127.0.0.53]: 8.8.8.8
Administrator password: 
Retype password: 
Looking up IPv4 addresses
Looking up IPv6 addresses
No IPv6 address will be assigned
Setting up share.ldb
Setting up secrets.ldb
Setting up the registry
Setting up the privileges database
Setting up idmap db
Setting up SAM db
Setting up sam.ldb partitions and settings
Setting up sam.ldb rootDSE
Pre-loading the Samba 4 and AD schema
Adding DomainDN: &lt;span class=&quot;nv&quot;&gt;DC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ad,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ricosharp,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;com
Adding configuration container
Setting up sam.ldb schema
Setting up sam.ldb configuration data
Setting up display specifiers
Modifying display specifiers
Adding &lt;span class=&quot;nb&quot;&gt;users &lt;/span&gt;container
Modifying &lt;span class=&quot;nb&quot;&gt;users &lt;/span&gt;container
Adding computers container
Modifying computers container
Setting up sam.ldb data
Setting up well known security principals
Setting up sam.ldb &lt;span class=&quot;nb&quot;&gt;users &lt;/span&gt;and &lt;span class=&quot;nb&quot;&gt;groups
&lt;/span&gt;Setting up self &lt;span class=&quot;nb&quot;&gt;join
&lt;/span&gt;Adding DNS accounts
Creating &lt;span class=&quot;nv&quot;&gt;CN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;MicrosoftDNS,CN&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;System,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ad,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ricosharp,DC&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;com
Creating DomainDnsZones and ForestDnsZones partitions
Populating DomainDnsZones and ForestDnsZones partitions
Setting up sam.ldb rootDSE marking as synchronized
Fixing provision GUIDs
A Kerberos configuration suitable &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Samba AD has been generated at /var/lib/samba/private/krb5.conf
Setting up fake yp server settings
Once the above files are installed, your Samba AD server will be ready to use
Server Role:           active directory domain controller
Hostname:              dc1
NetBIOS Domain:        AD
DNS Domain:            ad.ricosharp.com
DOMAIN SID:            S-1-5-21-2060062981-3252955935-809771608&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Copy the provisioned kerberos configuration file to the kerberos configuration file location&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo cp&lt;/span&gt; /var/lib/samba/private/krb5.conf /etc&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;test-the-configuration&quot;&gt;Test the configuration&lt;/h2&gt;
&lt;p&gt;Samba can now be run. But before setting up with systemd, start samba and run some tests with DNS.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;samba&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Test DNS&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;host &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; SRV _ldap._tcp.ad.ricosharp.com
Host _ldap._tcp.ad.ricosharp.com not found: 3&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;NXDOMAIN&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;host &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; SRV _kerberos._udp.ad.ricosharp.com
Host _kerberos._udp.ad.ricosharp.com not found: 3&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;NXDOMAIN&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;host &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; A dc1.ad.ricosharp.com
dc1.ad.ricosharp.com has address 192.168.122.70&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is not good as without DNS, AD will fail to run properly. If we run netstat to see what processes are listening on port 53, we can see that systemd-resolve is running in addition to samba.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;netstat &lt;span class=&quot;nt&quot;&gt;-tulpn&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; :53
tcp        0      0 127.0.0.53:53           0.0.0.0:&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;               LISTEN      688/systemd-resolve 
tcp6       0      0 :::53                   :::&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;                    LISTEN      4368/samba          
udp        0      0 127.0.0.53:53           0.0.0.0:&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;                           688/systemd-resolve 
udp6       0      0 :::53                   :::&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;                                4368/samba       &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A quick and dirty way to make sure that samba is the only process listening to DNS queries is to disable the systemd-resolved service.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl stop systemd-resolved
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl disable systemd-resolved
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo unlink&lt;/span&gt; /etc/resolv.conf
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/resolv.conf
nameserver 192.168.122.70
search ad.ricosharp.com
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;reboot&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Test DNS again. It looks like everything is now working.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;samba
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;host &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; SRV _ldap._tcp.ad.ricosharp.com
_ldap._tcp.ad.ricosharp.com has SRV record 0 100 389 dc1.ad.ricosharp.com.
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;host &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; SRV _kerberos.udp.ad.ricosharp.com
Host _kerberos.udp.ad.ricosharp.com not found: 3&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;NXDOMAIN&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;host &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; A dc1.ad.ricosharp.com
dc1.ad.ricosharp.com has address 192.168.122.70&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Let’s also go ahead and test kerberos authentication. Everything here looks in order.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;kinit Administrator
Password &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Administrator@AD.RICOSHARP.COM: 
Warning: Your password will expire &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;41 days on Sat 05 Oct 2019 04:12:28 PM UTC
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;klist
Ticket cache: FILE:/tmp/krb5cc_1000
Default principal: Administrator@AD.RICOSHARP.COM

Valid starting       Expires              Service principal
08/24/2019 16:42:07  08/25/2019 02:42:07  krbtgt/AD.RICOSHARP.COM@AD.RICOSHARP.COM
	renew &lt;span class=&quot;k&quot;&gt;until &lt;/span&gt;08/25/2019 16:42:04&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;configure-samba-ad-to-start-with-systemd&quot;&gt;Configure samba AD to start with systemd&lt;/h2&gt;
&lt;p&gt;Now that this is running, kill samba again so we can begin the process using systemd&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ps &lt;span class=&quot;nt&quot;&gt;-aux&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;samba
root      1134  0.0  2.1 542992 44676 ?        Ss   16:34   0:00 samba
root      1135  0.0  1.2 542992 25568 ?        S    16:34   0:00 samba
root      1136  0.0  1.8 547144 37744 ?        S    16:34   0:00 samba
root      1137  0.0  1.1 542996 22948 ?        S    16:34   0:00 samba
root      1138  0.0  1.4 542992 28740 ?        S    16:34   0:00 samba
root      1140  0.0  1.2 542992 25104 ?        S    16:34   0:00 samba
root      1141  0.5  1.5 542992 32564 ?        S    16:34   0:01 samba
root      1142  0.0  1.2 542992 25708 ?        S    16:34   0:00 samba
root      1143  0.0  1.4 542992 29244 ?        S    16:34   0:00 samba
root      1144  0.0  1.4 542992 28820 ?        S    16:34   0:00 samba
root      1145  0.0  1.2 542992 25568 ?        S    16:34   0:00 samba
root      1146  0.0  1.2 542992 25044 ?        S    16:34   0:00 samba
root      1147  0.0  1.8 542992 38052 ?        S    16:34   0:00 samba
root      1148  0.0  1.3 542992 27584 ?        S    16:34   0:00 samba
root      1149  0.0  1.5 543412 31340 ?        S    16:34   0:00 samba
root      1150  0.0  1.1 542996 22948 ?        S    16:34   0:00 samba
rico      1198  0.0  0.0  13136  1004 pts/0    S+   16:38   0:00 &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;auto samba

~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo kill &lt;/span&gt;1134
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ps &lt;span class=&quot;nt&quot;&gt;-aux&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;samba
rico      1203  0.0  0.0  13136  1152 pts/0    S+   16:38   0:00 &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;auto samba&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Mask the smbd, nmbd, winbind services and unmask the samba-ad-dc service&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl mask smbd nmbd winbind
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl disable smbd nmbd winbind
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl stop smbd nmbd winbind
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl unmask samba-ad-dc
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl start samba-ad-dc
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;samba-ad-dc&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Reboot and test&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;reboot
~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl status samba-ad-dc&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;join-a-computer-to-the-domain&quot;&gt;Join a computer to the domain&lt;/h2&gt;

&lt;p&gt;To join the domain on a Windows 10 computer, do the following:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: Make sure that your DNS is pointing to dc1 (192.168.122.70)&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Go to Start &amp;gt; Settings&lt;/li&gt;
  &lt;li&gt;Click Accounts&lt;/li&gt;
  &lt;li&gt;Access Work or School&lt;/li&gt;
  &lt;li&gt;Click Connect&lt;/li&gt;
  &lt;li&gt;Click Join this device to a local Active Directory domain&lt;/li&gt;
  &lt;li&gt;Type ad.ricosharp.com and enter the Administrator username/password for the domain&lt;/li&gt;
  &lt;li&gt;Select Skip to Add an account&lt;/li&gt;
  &lt;li&gt;Select Restart Now&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;An alternative way, and the way that I’m most used to is this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Open the File Explorer&lt;/li&gt;
  &lt;li&gt;Right click This PC &amp;gt; Properties&lt;/li&gt;
  &lt;li&gt;Select Change settings under the Computer name, domain, and workgroup settings section&lt;/li&gt;
  &lt;li&gt;Click the Change button&lt;/li&gt;
  &lt;li&gt;Select Domain and enter ad.ricosharp.com&lt;/li&gt;
  &lt;li&gt;Click ok, enter an Administrator username/password for the domain and reboot&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;create-a-user-account&quot;&gt;Create a user account&lt;/h2&gt;
&lt;p&gt;There are two ways you can manage user accounts. Firstly, you can use samba-tool. For example, to create a new user called user1, issue the following 
command:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;samba-tool user create user1&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The second way is to install the Remote System Administration Tools (RSAT) on a Windows 10 computer. You can download the RSAT from &lt;a href=&quot;https://www.microsoft.com/en-us/download/details.aspx?id=45520&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once installed, open Active Directory Users and Computers from Start &amp;gt; Windows Administrative Tools. Expand the active directory domain name (ad.ricosharp.com) and open the Users organizational unit. Right click and select New &amp;gt; User.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://wiki.samba.org/index.php/Setting_up_Samba_as_an_Active_Directory_Domain_Controller&quot;&gt;Setting up Samba as an Active Directory Domain Controller&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://wiki.samba.org/index.php/Managing_the_Samba_AD_DC_Service_Using_Systemd&quot;&gt;Managing the Samba AD DC Service Using Systemd&lt;/a&gt;&lt;/p&gt;</content><author><name>Rico Sharp</name><email>rico.sharp@gmail.com</email></author><summary type="html">How to build an Active Directory Domain Controller using Samba 4 on a linux host</summary></entry><entry><title type="html">Windows 10 deployment with Linux - Automating the Install</title><link href="http://localhost:4000/posts/2019/Windows-deployment-with-Linux-Automating-the-Install" rel="alternate" type="text/html" title="Windows 10 deployment with Linux - Automating the Install" /><published>2019-05-18T00:00:00-04:00</published><updated>2019-05-18T00:00:00-04:00</updated><id>http://localhost:4000/posts/2019/Windows-deployment-with-Linux-Automating-the-Install</id><content type="html" xml:base="http://localhost:4000/posts/2019/Windows-deployment-with-Linux-Automating-the-Install">&lt;p&gt;My &lt;a href=&quot;https://blog.ricosharp.com/posts/2019/Windows-deployment-with-Linux&quot;&gt;previous post&lt;/a&gt; about Windows 10 Deployment with Linux was focussed on how to get up and running. But the deployment process requires quite a bit of user interaction. For example, after network booting, you have to login to the deployment share. You then have to select the task sequence and set a bunch of other parameters. All of these steps can be automated to the point where there is zero user interaction.&lt;/p&gt;

&lt;p&gt;In order to achieve a fully automated installation, you need to set some parameters in the CustomSettings.ini and Bootstrap.ini files. What these parameters do should be self evident in the configuration below.&lt;/p&gt;

&lt;p&gt;My personal preference is not to fully automate a deployment. This gives you a way out if you accidentally network boot into the Windows PE environment, which would then automatically begin the Task Sequence. What I prefer to do force a page from the wizard to show, such as the Task Sequence selection (SkipTaskSequence=NO).&lt;/p&gt;

&lt;h2 id=&quot;customsettingsini&quot;&gt;CustomSettings.ini&lt;/h2&gt;

&lt;p&gt;There are two ways to edit this file:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Open \\%DeployRoot%\Control\CustomSettings.ini with a text editor such as notepad.&lt;/li&gt;
  &lt;li&gt;In the Deployment Workbench, right click your Deployment Share then select properties. The CustomSettings.ini file can be edited from the Rules tab.&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[Settings]
Priority=Default
Properties=MyCustomProperty

[Default]
OSInstall=Y
SkipCapture=YES
SkipAdminPassword=YES
SkipProductKey=YES
SkipComputerBackup=YES
SkipBitLocker=YES
SkipTaskSequence=YES
TaskSequenceID=&quot;Windows 10 Deployment&quot;
SkipComputerName=YES
SkipDomainMembership=YES
SkipUserData=YES
SkipLocaleSelection=YES
TimeZoneName=&quot;Eastern Standard Time&quot;
SkipTimeZone=YES
SkipSummary=YES&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;booststrapini&quot;&gt;Booststrap.ini&lt;/h2&gt;

&lt;p&gt;There are two ways to edit this file:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Open \\%DeployRoot%\Control\Bootstrap.ini with a text editor such as notepad.&lt;/li&gt;
  &lt;li&gt;In the Deployment Workbench, right click your Deployment Share then select properties. Select the Rules tab then click Edit Bootstrap.ini.&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[Settings]
Priority=Default

[Default]
DeployRoot=\\192.168.122.100\mdt$
UserID=mdtread
UserPassword=password
UserDomain=192.168.122.100
SkipBDDWelcome=YES&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/sccm/mdt/toolkit-reference&quot;&gt;Toolkit Reference for the Microsoft Deployment Toolkit&lt;/a&gt;&lt;/p&gt;</content><author><name>Rico Sharp</name><email>rico.sharp@gmail.com</email></author><summary type="html">A continuation to deploying Windows 10 with MDT and Linux, with a focus on automating the process</summary></entry><entry><title type="html">Windows 10 deployment with Linux - Initial Setup</title><link href="http://localhost:4000/posts/2019/Windows-deployment-with-Linux-Initial-Setup" rel="alternate" type="text/html" title="Windows 10 deployment with Linux - Initial Setup" /><published>2019-05-13T00:00:00-04:00</published><updated>2019-05-13T00:00:00-04:00</updated><id>http://localhost:4000/posts/2019/Windows-deployment-with-Linux-Initial-Setup</id><content type="html" xml:base="http://localhost:4000/posts/2019/Windows-deployment-with-Linux-Initial-Setup">&lt;p&gt;I’ve always been under the impression that you need Windows Deployment Services (WDS) in order to deploy Windows with the Microsoft Deployment Toolkit (MDT). But it turns out you need nothing more than a Samba share, TFTP server, and a few tweaks to DHCP to get a pretty solid set up.&lt;/p&gt;

&lt;p&gt;This procedure involves generating a boot image with MDT and copying that image to a TFTP server. A client then PXE boots, loads that image into memory through memdisk and runs the task sequence to install Windows. You will of course require one Windows machine to configure the task sequences.&lt;/p&gt;

&lt;p&gt;This guide only contains the barebones installation of Windows through a Deployment Share. You can add software and automate the process to provide a zero touch installation. More on that in a future post.&lt;/p&gt;

&lt;h1 id=&quot;requirements&quot;&gt;Requirements&lt;/h1&gt;
&lt;p&gt;Below are the requirements:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#Linux computer with a Samba share&quot;&gt;Linux computer with a Samba share&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#Windows 10 computer with MDT&quot;&gt;Windows 10 computer with MDT&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#TFTP Server&quot;&gt;TFTP server&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#DHCP Server&quot;&gt;DHCP server&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To keep things simple, I will configure Samba, DHCP, and TFTP on the same computer. I will be using CentOS in this guide but these steps should be easily portable to other flavours of Linux.&lt;/p&gt;

&lt;p&gt;This guide is based on a virtual environment using KVM. The CentOS computer will be configured with an IP address of 192.168.122.100/24. All other computers (Windows 10, deployment machine) are virtual and configured to use DHCP.&lt;/p&gt;

&lt;p&gt;The CentOS computer has been installed with the CentOS minimal ISO. The latest updates have been installed.&lt;/p&gt;

&lt;h1 id=&quot;steps&quot;&gt;Steps&lt;/h1&gt;
&lt;h2 id=&quot;linux-computer-with-a-samba-share&quot;&gt;&lt;a name=&quot;Linux computer with a Samba share&quot;&gt;Linux computer with a Samba share&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Install samba and policycoreutils-python. The latter package will give us the semanage command for SELinux.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# yum &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; samba policycoreutils-python&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Create two user accounts; mdtread and mdtwrite. The mdtread account will used to connect to the deployment share during deployment. The mdtwrite account is what the Windows 10 computer will use to connect and make changes to the deployment share. These accounts are only needed for authentication so we won’t create a home directory (-M) or give them a shell (-s /sbin/nologin).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# useradd &lt;span class=&quot;nt&quot;&gt;-M&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; /sbin/nologin mdtread
~]# useradd &lt;span class=&quot;nt&quot;&gt;-M&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; /sbin/nologin mdtwrite
~]# passwd mdtread
~]# passwd mdtread
~]# smbpasswd &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; mdtread
~]# smbpasswd &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; mdtwrite&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Create and configure the MDT Share for Samba. I create this as a hidden share so it does not appear in an explorer window. I remove everything in the default smb.conf except the [global] section.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# &lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /data/mdt
~]# &lt;span class=&quot;nb&quot;&gt;chown&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; mdtwrite:mdtwrite /data/mdt
~]# vi /etc/samba/smb.conf
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mdt&lt;span class=&quot;nv&quot;&gt;$]&lt;/span&gt;
    path &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; /data/mdt
    valid &lt;span class=&quot;nb&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; mdtread mdtwrite
    write list &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; mdtwrite&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Verify everything is ok with the Samba configuration file&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# testparm&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Configure SELinux to allow Samba access to the mdt directory. Verify this with the ls commmand.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# semanage fcontext &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; samba_share_t &lt;span class=&quot;s2&quot;&gt;&quot;/data/mdt(/.*)?&quot;&lt;/span&gt;
~]# restorecon /data/mdt
~]# &lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-alZ&lt;/span&gt; /data/mdt&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# systemctl start smb
~]# systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;smb
~]# firewall-cmd &lt;span class=&quot;nt&quot;&gt;--add-service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;samba
~]# firewall-cmd &lt;span class=&quot;nt&quot;&gt;--add-service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;samba &lt;span class=&quot;nt&quot;&gt;--permanent&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;optional&quot;&gt;Optional&lt;/h4&gt;
&lt;p&gt;If you must enable NetBIOS, start and enable nmbd. This will allow you to resolve to the hostname of your Linux computer through NetBIOS, rather than DNS.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# systemctl start nmb
~]# systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;nmb&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;verify-share-access&quot;&gt;Verify Share Access&lt;/h4&gt;
&lt;p&gt;On your Windows 10 computer, verify you can access the share. Click on the Start menu and type \\192.168.122.100\mdt$&lt;/p&gt;

&lt;h2 id=&quot;windows-10-computer-with-mdt&quot;&gt;&lt;a name=&quot;Windows 10 computer with MDT&quot;&gt;Windows 10 computer with MDT&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;install-mdt-and-adk&quot;&gt;Install MDT and ADK&lt;/h3&gt;
&lt;p&gt;You will need to download and install the following:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Microsoft Deployment Toolkit&lt;/li&gt;
  &lt;li&gt;Windows 10 Assessment and Deployment Kit (I just install Deployment Tools and Windows PE)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A simple Google search will bring up the download links for this software.&lt;/p&gt;

&lt;h3 id=&quot;add-deployment-share-to-mdt&quot;&gt;Add Deployment Share to MDT&lt;/h3&gt;

&lt;p&gt;Once MDT and ADK are installed, open the Deployment Workbench.&lt;/p&gt;

&lt;p&gt;Right click Deployment Shares and select New Deployment Share.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/new-deployment-share.png&quot; alt=&quot;New Deployment Share&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you try to add the deployment share through its UNC path, you will receieve an error. This is because you haven’t been authenticated yet. What you can do to work around this is open the Credential Manager from the Control Panel and add new Windows credentials for your share (192.168.122.100, mdtwrite, &amp;lt;password&amp;gt;).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/add-unc-path.png&quot; alt=&quot;Add using UNC path&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/credential-manager.png&quot; alt=&quot;Credential Manager&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Follow the rest of the prompts. These can always be changed at a later stage. The Deployment Workbench will now copy some files to the MDT share.&lt;/p&gt;

&lt;h3 id=&quot;obtain-windows-10-iso-and-upload-to-deployment-share&quot;&gt;Obtain Windows 10 ISO and Upload to Deployment Share&lt;/h3&gt;
&lt;p&gt;You will need a Windows 10 ISO to upload to the MDT share. Thankfully this can be downloaded quite easily from the Microsoft website, unlike previous versions of Windows.&lt;/p&gt;

&lt;p&gt;If using a Mac or Linux computer, you can go &lt;a href=&quot;https://www.microsoft.com/en-us/software-download/windows10ISO&quot;&gt;here&lt;/a&gt; and select the edition and language to download.&lt;/p&gt;

&lt;p&gt;Downloading from a Windows machine requires a few more steps. It’s nothing hard but we just need to trick the web server into thinking that we are using another operating system, otherwise we are presented wtith the Windows 10 installation media download. In Google Chrome, go to the &lt;a href=&quot;https://www.microsoft.com/en-us/software-download/windows10ISO&quot;&gt;Windows 10 download site&lt;/a&gt;. Open the Developer tools (CTRL + SHIFT + I). Click the three dots at the top right hand corner &amp;gt; More Tools &amp;gt; Network Conditions. Uncheck Select Automatically and select a non-Windows OS, such as Chrome - Mac. Hit the refresh button and you will be able to select the edition and language to download.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/network-conditions.png&quot; alt=&quot;Network Conditions&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/chrome-mac.png&quot; alt=&quot;Chrome Mac&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I download the English version. I haven’t verified this but I believe the difference between English and English International is the English version is US English. The English International version is British English and contains additional keyboard layouts.&lt;/p&gt;

&lt;p&gt;Once the download has completed, mount the ISO.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/mount-os.png&quot; alt=&quot;Mount OS&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Back in the Deployment Share, right click Operating Systems and select Import Operating System.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/import-os.png&quot; alt=&quot;Import OS&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Make sure Full set of source files is checked and click next.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/os-type.png&quot; alt=&quot;OS Type&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Browse to the drive where the ISO was mounted and click next.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/os-source.png&quot; alt=&quot;OS Source&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Follow the rest of the prompts. The OS files will begin uploadeding to the Deployment Share. This may take a few minutes.&lt;/p&gt;

&lt;p&gt;Now we want to create a task sequence. Right click Task Sequences and select New Task Sequence.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/new-task-sequence.png&quot; alt=&quot;New Task Sequence&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Give the Task Sequence an ID and Name and click next.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/task-sequence-name.png&quot; alt=&quot;Task Sequence Name&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Make sure Standard Client Task Sequence is selected and click next.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/task-sequence-template.png&quot; alt=&quot;Task Sequence Template&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Select the OS that you are deploying. Here I’m using Windows 10 Pro.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/task-sequence-select-os.png&quot; alt=&quot;Task Sequence Select OS&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Follow the rest of the prompts. I only have individual activation keys, so I don’t specify them during the install.&lt;/p&gt;

&lt;p&gt;We are now ready to generate the ISO that we can boot for deployment. Right click on the Deployment Share and select Update Deployment Share. Since this is a new Deployment Share, just click next through the prompts. The ISO that needs to be uploaded to the TFTP Server will be generated. This may take a few minutes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/update-deployment-share.png&quot; alt=&quot;Update Deployment Share&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;tftp-server&quot;&gt;&lt;a name=&quot;TFTP Server&quot;&gt;TFTP server&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Install TFTP Server.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# yum &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; tftp-server&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Enable TFTP Server in its configuration file by changing the disable line from yes to no.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# vi /etc/xinetd.d/tftp
disable &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; no&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Download syslinux. We need to use memdisk to boot the ISO. I just pull syslinux from the CentOS repos.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# yum &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; syslinux&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Copy the necessary syslinux files to the tftpboot directory.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# &lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; /usr/share/syslinux/pxelinux.0 /var/lib/tftpboot/
~]# &lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; /usr/share/syslinux/memdisk /var/lib/tftpboot/
~]# &lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; /usr/share/syslinux/menu.c32 /var/lib/tftpboot/&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Copy the LiteTouch ISO to the tftpboot directory.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# &lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; /data/mdt/Boot/LiteTouchPE_x64.iso /var/lib/tftpboot/&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Create the boot menu.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# &lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /var/lib/tftpboot/pxelinux.cfg
~]# vi /var/lib/tftpboot/pxelinux.cfg/default
default menu.c32
prompt 0
&lt;span class=&quot;nb&quot;&gt;timeout &lt;/span&gt;300
ONTIMEOUT 1

menu title &lt;span class=&quot;c&quot;&gt;########## OS Deploy ##########&lt;/span&gt;

label 1
menu label ^1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Boot from &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;drive
localboot 0

label 2
menu label ^2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Windows 10
&lt;span class=&quot;c&quot;&gt;#menu default&lt;/span&gt;
kernel memdisk
append iso &lt;span class=&quot;nv&quot;&gt;initrd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;LiteTouchPE_x64.iso raw&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Start the TFTP server and enable on startup.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# systemctl start tftp
~]# systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;tftp&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Configure firewall to allow TFTP through.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# firewall-cmd &lt;span class=&quot;nt&quot;&gt;--add-service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;tftp
~]# firewall-cmd &lt;span class=&quot;nt&quot;&gt;--add-service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;tftp &lt;span class=&quot;nt&quot;&gt;--permanent&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;dhcp-server&quot;&gt;&lt;a name=&quot;DHCP Server&quot;&gt;DHCP Server&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Install the DHCP server&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# yum &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; dhcp&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Configure the DHCP server&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# vi /etc/dhcp/dhcpd.conf
&lt;span class=&quot;nv&quot;&gt;DHCPDARGS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;eth0&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#Listen on eth0&lt;/span&gt;
subnet 192.168.122.0 netmask 255.255.255.0
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        option routers                  192.168.122.1&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        option subnet-mask              255.255.255.0&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        option domain-search            &lt;span class=&quot;s2&quot;&gt;&quot;lab.local&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        option domain-name-servers      192.168.122.1&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        option time-offset              &lt;span class=&quot;nt&quot;&gt;-18000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;     &lt;span class=&quot;c&quot;&gt;# Eastern Standard Time&lt;/span&gt;
        filename                        &lt;span class=&quot;s2&quot;&gt;&quot;pxelinux.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        next-server                     192.168.122.100&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        range                           192.168.122.10 192.168.122.99&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Start the DHCP service and enable on startup&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# systemctl start dhcpd
~]# systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;dhcpd&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Configure firewall to allow DHCP requests&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# firewall-cmd &lt;span class=&quot;nt&quot;&gt;--add-service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;dhcp
~]# firewall-cmd &lt;span class=&quot;nt&quot;&gt;--add-service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;dhcp &lt;span class=&quot;nt&quot;&gt;--permanent&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;finishing-touches&quot;&gt;Finishing Touches&lt;/h2&gt;

&lt;p&gt;When the Deployment Share was created, a few files and folders were created on it. We need to adjust some of the permissions so our mdtread user can access the share.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;~]# &lt;span class=&quot;nb&quot;&gt;chmod&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; 755 /data/mdt&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;deployment&quot;&gt;Deployment&lt;/h2&gt;

&lt;p&gt;We are now ready to deploy Windows 10.&lt;/p&gt;

&lt;p&gt;Network boot the computer and select Windows 10.
&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/pxe-win-10.png&quot; alt=&quot;PXE Windows 10&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Select Run Deployment Wizard to install a new Operating System.
&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/run-deployment-wizard.png&quot; alt=&quot;Run Deployment Wizard&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Enter the read only credentials of the Deployment Share.
&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/deployment-credentials.png&quot; alt=&quot;Deployment Credentials&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Select the Windows 10 Deployment Task Sequence and follow the rest of the prompts. Follow the rest of the prompts. Windows 10 will now be installed.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/2019/deployment-install.png&quot; alt=&quot;Deployment Install&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://wiki.samba.org/index.php/Setting_up_Samba_as_a_Standalone_Server#Creating_a_Local_User_Account&quot;&gt;Samba - Creating Local Accounts&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.samba.org/samba/docs/current/man-html/smb.conf.5.html&quot;&gt;Samba Configuration File&lt;/a&gt;&lt;/p&gt;</content><author><name>Rico Sharp</name><email>rico.sharp@gmail.com</email></author><summary type="html">A guide to deploying Windows 10 over a network with Microsoft Deployment Toolkit (MDT) and Linux</summary></entry></feed>